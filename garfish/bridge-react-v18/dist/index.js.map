{
  "version": 3,
  "sources": ["../src/index.ts", "../src/reactBridge.ts"],
  "sourcesContent": ["export { reactBridge } from './reactBridge';\nexport type { PropsInfo } from './types';\n", "// The logic of reactBridge is referenced from single-spa typography\n// Because the Garfish lifecycle does not agree with that of single-spa  part logical coupling in the framework\n// https://github.com/single-spa/single-spa-react/blob/main/src/single-spa-react.js\n\nimport * as React from 'react';\nimport { createRoot, hydrateRoot, Root } from 'react-dom/client';\nimport type { UserOptions, PropsInfo } from './types';\nimport { warn } from '@garfish/utils';\n\ntype typeReact = typeof React;\n\ntype Options = UserOptions<\n  typeof React,\n  typeof createRoot,\n  typeof hydrateRoot,\n  Root,\n  any,\n  React.ReactNode\n>;\n\nconst defaultOpts = {\n  // required - one or the other or both\n  rootComponent: undefined,\n  loadRootComponent: undefined,\n\n  // optional opts\n  renderType: undefined,\n  errorBoundary: undefined,\n  el: undefined,\n  canUpdate: true, // by default, allow parcels created with garfish-react-bridge to be updated\n  suppressComponentDidCatchWarning: false,\n  domElements: {},\n  renderResults: {},\n  updateResolves: {},\n};\n\ndeclare const __GARFISH_EXPORTS__: {\n  provider: Object;\n};\n\ndeclare global {\n  interface Window {\n    __GARFISH__: boolean;\n  }\n}\n\nexport function reactBridge(this: any, userOpts: Options) {\n  if (typeof userOpts !== 'object') {\n    throw new Error('garfish-react-bridge requires a configuration object');\n  }\n\n  const opts: Options = {\n    ...defaultOpts,\n    ...userOpts,\n  };\n\n  opts.React = opts.React || React;\n  opts.createRoot = opts.createRoot || createRoot;\n  opts.hydrateRoot = opts.hydrateRoot || hydrateRoot;\n\n  if (!opts.rootComponent && !opts.loadRootComponent) {\n    throw new Error(\n      'garfish-react-bridge must be passed opts.rootComponent or opts.loadRootComponent',\n    );\n  }\n\n  if (opts.errorBoundary && typeof opts.errorBoundary !== 'function') {\n    throw Error(\n      'The errorBoundary opt for garfish-react-bridge must either be omitted or be a function that returns React elements',\n    );\n  }\n  if (!atLeastReact18(opts.React)) {\n    throw Error(\n      'Please make sure than the react version is higher than or equal to v18.',\n    );\n  }\n\n  const providerLifeCycle = {\n    render: (appInfo: PropsInfo) => mount.call(this, opts, appInfo),\n    destroy: (appInfo: PropsInfo) => unmount.call(this, opts, appInfo),\n    // update: (appInfo: PropsInfo) =>\n    //   opts.canUpdate && update.call(this, opts, appInfo),\n  };\n\n  const provider = async function (this: any, appInfo, props) {\n    await bootstrap.call(this, opts, appInfo, props);\n    return providerLifeCycle;\n  };\n\n  if (\n    window.__GARFISH__ &&\n    typeof __GARFISH_EXPORTS__ === 'object' &&\n    __GARFISH_EXPORTS__\n  ) {\n    __GARFISH_EXPORTS__.provider = provider;\n  }\n  return provider;\n}\n\nfunction bootstrap(opts: Options, appInfo, props) {\n  if (opts.loadRootComponent) {\n    // They passed a promise that resolves with the react component. Wait for it to resolve before mounting\n    return opts\n      .loadRootComponent({\n        ...appInfo,\n        props,\n      })\n      .then((resolvedComponent) => {\n        opts.rootComponent = resolvedComponent;\n      });\n  } else {\n    // This is a class or stateless function component\n    return Promise.resolve();\n  }\n}\n\nfunction mount(opts: Options, appInfo: PropsInfo) {\n  if (\n    !opts.suppressComponentDidCatchWarning &&\n    atLeastReact18(opts.React) &&\n    !opts.errorBoundary\n  ) {\n    if (!opts.rootComponent.prototype) {\n      warn(\n        `garfish-react-bridge: ${appInfo.appName}'s rootComponent does not implement an error boundary.  If using a functional component, consider providing an opts.errorBoundary to reactBridge(opts).`,\n      );\n    } else if (!opts.rootComponent.prototype.componentDidCatch) {\n      warn(\n        `garfish-react-bridge: ${appInfo.appName}'s rootComponent should implement componentDidCatch to avoid accidentally unmounting the entire garfish application.`,\n      );\n    }\n  }\n\n  const elementToRender = getElementToRender(opts, appInfo);\n  const domElement = chooseDomElementGetter(opts, appInfo);\n  const renderResult = callCreateRoot({\n    elementToRender,\n    domElement,\n    opts,\n  });\n\n  if (opts.domElements) {\n    opts.domElements[appInfo.appName] = domElement;\n  }\n  if (opts.renderResults) {\n    opts.renderResults[appInfo.appName] = renderResult;\n  }\n}\n\nfunction unmount(opts: Options, appInfo: PropsInfo) {\n  if (opts.renderResults) {\n    const root = opts.renderResults[appInfo.appName];\n    root.unmount();\n    opts.domElements && delete opts.domElements[appInfo.appName];\n    delete opts.renderResults[appInfo.appName];\n  }\n}\n\n// function update(opts: Options, appInfo: PropsInfo) {\n//   return new Promise((resolve) => {\n//     if (!opts.updateResolves[appInfo.appName]) {\n//       opts.updateResolves[appInfo.appName] = [];\n//     }\n\n//     opts.updateResolves[appInfo.appName].push(resolve);\n//     const elementToRender = getElementToRender(opts, appInfo);\n//     const renderRoot = opts.renderResults[appInfo.appName];\n//     renderRoot.render(elementToRender);\n//   });\n// }\n\nfunction atLeastReact18(React?: typeReact) {\n  if (\n    React &&\n    typeof React.version === 'string' &&\n    React.version.indexOf('.') >= 0\n  ) {\n    const majorVersionString = React.version.split('.')[0];\n    try {\n      return Number(majorVersionString) >= 18;\n    } catch (err) {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\nfunction callCreateRoot({ opts, elementToRender, domElement }) {\n  const renderType =\n    typeof opts.renderType === 'function' ? opts.renderType() : opts.renderType;\n\n  let root;\n  if (renderType === 'hydrate') {\n    root = opts.hydrateRoot(elementToRender, domElement);\n    root.render(elementToRender);\n  } else {\n    // default to this if 'renderType' is null or doesn't match the other options\n    root = opts.createRoot(domElement);\n    root.render(elementToRender);\n  }\n\n  return root;\n}\n\nfunction getElementToRender(opts: Options, appInfo: PropsInfo) {\n  const rootComponentElement = opts.React?.createElement(\n    opts.rootComponent as any,\n    appInfo,\n  );\n\n  let elementToRender = rootComponentElement;\n\n  if (opts.errorBoundary) {\n    elementToRender = opts.React?.createElement(\n      createErrorBoundary(opts) as any,\n      appInfo,\n      elementToRender,\n    );\n  }\n  return elementToRender;\n}\n\nfunction createErrorBoundary(opts: Options) {\n  // Avoiding babel output for class syntax and super()\n  // to avoid bloat\n  function GarfishSubAppReactErrorBoundary(this: any, appInfo: PropsInfo) {\n    // super\n    opts.React?.Component.apply(this, arguments);\n\n    this.state = {\n      caughtError: null,\n      caughtErrorInfo: null,\n    };\n\n    (\n      GarfishSubAppReactErrorBoundary as any\n    ).displayName = `ReactBridgeReactErrorBoundary(${appInfo.appName})`;\n  }\n\n  GarfishSubAppReactErrorBoundary.prototype =\n    opts.React && Object.create(opts.React.Component.prototype);\n\n  GarfishSubAppReactErrorBoundary.prototype.render = function () {\n    if (this.state.caughtError) {\n      const errorBoundary = opts.errorBoundary;\n\n      return errorBoundary && errorBoundary(this.state.caughtError, this.props);\n    } else {\n      return this.props.children;\n    }\n  };\n\n  GarfishSubAppReactErrorBoundary.prototype.componentDidCatch = function (\n    err,\n    info,\n  ) {\n    this.setState({\n      caughtError: err,\n      caughtErrorInfo: info,\n    });\n  };\n\n  return GarfishSubAppReactErrorBoundary;\n}\n\nfunction chooseDomElementGetter(opts: Options, appInfo: PropsInfo) {\n  const { dom: container } = appInfo;\n  let el;\n  if (typeof opts.el === 'string') {\n    el = container.querySelector(opts.el);\n  } else {\n    el = container;\n  }\n\n  if (!(el instanceof HTMLElement)) {\n    throw Error(\n      `react bridge's dom-element-getter-helpers: el is an invalid dom element for application'${\n        appInfo.appName\n      }'. Expected HTMLElement, received ${typeof el}`,\n    );\n  }\n  return el;\n}\n"],
  "mappings": "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",
  "names": []
}
