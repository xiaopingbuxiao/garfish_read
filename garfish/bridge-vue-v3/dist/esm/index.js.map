{
  "version": 3,
  "sources": ["../../src/vueBridge.ts"],
  "sourcesContent": ["// The logic of reactBridge is referenced from single-spa typography\n// Because the Garfish lifecycle does not agree with that of single-spa  part logical coupling in the framework\n// https://github.com/single-spa/single-spa-vue/blob/main/src/single-spa-vue.js\n\nimport * as vue from 'vue';\nimport { UserOptions } from './types';\n\ntype Options = UserOptions<\n  vue.CreateAppFunction<Element>,\n  vue.Component,\n  vue.App\n>;\n\nconst defaultOpts = {\n  createApp: null,\n  VueRouter: null,\n  // required - one or the other\n  rootComponent: null,\n  loadRootComponent: null,\n  appOptions: null,\n  handleInstance: null,\n  el: null,\n  canUpdate: true, // by default, allow parcels created with garfish-react-bridge to be updated\n};\n\ndeclare const __GARFISH_EXPORTS__: {\n  provider: Object;\n};\n\ndeclare global {\n  interface Window {\n    __GARFISH__: boolean;\n  }\n}\n\nexport function vueBridge(this: any, userOpts: Options) {\n  if (typeof userOpts !== 'object') {\n    throw new Error('garfish-vue-bridge: requires a configuration object');\n  }\n\n  const opts = {\n    ...defaultOpts,\n    ...userOpts,\n  };\n\n  if (\n    opts.appOptions &&\n    typeof opts.appOptions !== 'function' &&\n    opts.appOptions['el'] !== undefined &&\n    typeof opts.appOptions['el'] !== 'string' &&\n    !((opts.appOptions as any).el instanceof HTMLElement)\n  ) {\n    throw Error(\n      `garfish-vue-bridge: appOptions.el must be a string CSS selector, an HTMLElement, or not provided at all. Was given ${typeof (\n        opts.appOptions as any\n      ).el}`,\n    );\n  }\n\n  opts.createApp = opts.createApp || vue.createApp;\n  // Just a shared object to store the mounted object state\n  // key - name of single-spa app, since it is unique\n  const mountedInstances = {};\n  const providerLifeCycle = {\n    render: (props) => mount.call(this, opts, mountedInstances, props),\n    destroy: (props) => unmount.call(this, opts, mountedInstances, props),\n    update: (props) =>\n      opts.canUpdate && update.call(this, opts, mountedInstances, props),\n  };\n\n  const provider = async function (this: any, appInfo, props) {\n    await bootstrap.call(this, opts, appInfo, props);\n    return providerLifeCycle;\n  };\n\n  // in sandbox env\n  if (\n    window.__GARFISH__ &&\n    typeof __GARFISH_EXPORTS__ === 'object' &&\n    __GARFISH_EXPORTS__\n  ) {\n    __GARFISH_EXPORTS__.provider = provider;\n  }\n  return provider;\n}\n\nfunction bootstrap(opts: Options, appInfo, props) {\n  if (opts.loadRootComponent) {\n    return opts\n      .loadRootComponent({\n        ...appInfo,\n        props,\n      })\n      .then((root) => (opts.rootComponent = root));\n  } else {\n    return Promise.resolve();\n  }\n}\n\nfunction resolveAppOptions(opts, props) {\n  if (typeof opts.appOptions === 'function') {\n    return opts.appOptions(props);\n  }\n  return { ...opts.appOptions };\n}\n\nfunction mount(opts: Options, mountedInstances, props) {\n  const instance: any = {\n    domEl: null,\n    vueInstance: null,\n    root: null,\n  };\n\n  const appOptions = resolveAppOptions(opts, props);\n\n  if (!(props.dom instanceof HTMLElement)) {\n    throw Error(\n      `garfish-vue-bridge: Garfish runtime provides no dom attributes to mount\uFF0C ${props.dom}`,\n    );\n  }\n\n  if (appOptions.el) {\n    appOptions.el = props.dom.querySelector(appOptions.el);\n    if (!appOptions.el) {\n      throw Error(\n        `If appOptions.el is provided to garfish, the dom element must exist in the dom. Was provided as ${appOptions.el}.If use js as sub application entry resource please don't provider el options`,\n      );\n    }\n  } else {\n    appOptions.el = props.dom;\n  }\n\n  instance.domEl = appOptions.el;\n\n  if (!appOptions.data) {\n    appOptions.data = {};\n  }\n\n  appOptions.data = () => ({ ...appOptions.data, ...props });\n\n  if (opts.createApp) {\n    instance.vueInstance = opts.appOptions\n      ? opts.createApp(appOptions)\n      : opts.createApp(opts.rootComponent as any);\n    if (opts.handleInstance) {\n      opts.handleInstance(instance.vueInstance, props);\n      instance.root = instance.vueInstance.mount(appOptions.el);\n      mountedInstances[props.appName] = instance;\n      return instance.vueInstance;\n    } else {\n      instance.root = instance.vueInstance.mount(appOptions.el);\n    }\n  }\n\n  mountedInstances[props.appName] = instance;\n  return instance.vueInstance;\n}\n\nfunction update(opts: Options, mountedInstances, props) {\n  const instance = mountedInstances[props.appName];\n\n  const appOptions = resolveAppOptions(opts, props);\n  const data = {\n    ...(appOptions.data || {}),\n    ...props,\n  };\n  const root = instance.root || instance.vueInstance;\n  for (const prop in data) {\n    root[prop] = data[prop];\n  }\n}\n\nfunction unmount(opts: Options, mountedInstances, props) {\n  const instance = mountedInstances[props.appName];\n  instance.vueInstance.unmount(instance.domEl);\n  delete instance.vueInstance;\n\n  if (instance.domEl) {\n    instance.domEl.innerHTML = '';\n    delete instance.domEl;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
