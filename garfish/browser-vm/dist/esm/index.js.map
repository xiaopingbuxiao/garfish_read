{
  "version": 3,
  "sources": ["../../src/pluginify.ts", "../../src/sandbox.ts", "../../src/modules/history.ts", "../../src/proxyInterceptor/shared.ts", "../../src/utils.ts", "../../src/symbolTypes.ts", "../../src/modules/network.ts", "../../src/proxyInterceptor/document.ts", "../../src/modules/document.ts", "../../src/modules/uiEvent.ts", "../../src/modules/storage.ts", "../../src/modules/eventListener.ts", "../../src/modules/mutationObserver.ts", "../../src/modules/timer.ts", "../../src/dynamicNode/index.ts", "../../src/dynamicNode/processParams.ts", "../../src/dynamicNode/processor.ts", "../../src/lifecycle.ts", "../../src/proxyInterceptor/global.ts"],
  "sourcesContent": ["import { interfaces } from '@garfish/core';\nimport { warn, isPlainObject } from '@garfish/utils';\nimport { Module } from './types';\nimport { Sandbox } from './sandbox';\nimport { recordStyledComponentCSSRules, rebuildCSSRules } from './dynamicNode';\n\ndeclare module '@garfish/core' {\n  export default interface Garfish {\n    setGlobalValue(key: string, value?: any): void;\n    getGlobalObject: () => Window & typeof globalThis;\n    clearEscapeEffect: (key: string, value?: any) => void;\n  }\n\n  export namespace interfaces {\n    export interface SandboxConfig {\n      modules?: Array<Module> | Record<string, Module>;\n    }\n\n    export interface Config {\n      protectVariable?: PropertyKey[];\n      insulationVariable?: PropertyKey[];\n    }\n\n    export interface AppInfo {\n      protectVariable?: PropertyKey[];\n      insulationVariable?: PropertyKey[];\n    }\n\n    export interface App {\n      vmSandbox?: Sandbox;\n    }\n  }\n}\n\nconst specialExternalVariables = [\n  'onerror',\n  'webpackjsonp',\n  '__REACT_ERROR_OVERLAY_GLOBAL_HOOK__',\n  (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV ? (process.env.NODE_ENV !== \"production\") : false) ? 'webpackHotUpdate' : '',\n];\n\nfunction compatibleOldModule(\n  modules: Array<Module> | Record<string, Module>,\n): Array<Module> {\n  if (!Array.isArray(modules)) {\n    (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV ? (process.env.NODE_ENV !== \"production\") : false) && warn('\"vm sandbox\" modules should be an array');\n    const list: Array<Module> = [];\n    for (const key in modules) {\n      list.push(modules[key]);\n    }\n    modules = list;\n  }\n  return modules;\n}\n\nfunction rewriteAppAndSandbox(\n  Garfish: interfaces.Garfish,\n  app: interfaces.App,\n  sandbox: Sandbox,\n) {\n  const originExecScript = sandbox.execScript;\n  // Rewrite sandbox attributes\n  sandbox.loader = Garfish.loader;\n  sandbox.execScript = (code, env, url, options) => {\n    const evalHooksArgs = [app.appInfo, code, env, url, options] as const;\n    app.hooks.lifecycle.beforeEval.emit(...evalHooksArgs);\n    try {\n      const res = originExecScript.call(\n        sandbox,\n        code,\n        {\n          // For application of environment variables\n          ...env,\n          ...app.getExecScriptEnv(options?.noEntry),\n        },\n        url,\n        options,\n      );\n      app.hooks.lifecycle.afterEval.emit(...evalHooksArgs);\n      return res;\n    } catch (err) {\n      app.hooks.lifecycle.errorExecCode.emit(err, ...evalHooksArgs);\n      throw err;\n    }\n  };\n\n  // Rewrite app attributes\n  app.vmSandbox = sandbox;\n  app.global = sandbox.global;\n  app.strictIsolation = sandbox.options.strictIsolation ?? false;\n  app.runCode = function () {\n    return originExecScript.apply(sandbox, arguments);\n  };\n  if (app.entryManager.DOMApis && sandbox.global) {\n    app.entryManager.DOMApis.document = sandbox.global.document;\n  }\n}\n\nfunction createOptions(Garfish: interfaces.Garfish) {\n  const canSupport = Sandbox.canSupport();\n\n  const options: interfaces.Plugin = {\n    name: 'browser-vm',\n    version: '1.12.0',\n\n    afterLoad(appInfo, appInstance) {\n      if (\n        !canSupport ||\n        !appInstance ||\n        appInstance?.vmSandbox ||\n        appInfo.sandbox === false || // Ensure that old versions compatible\n        (appInfo.sandbox && appInfo.sandbox.open === false) ||\n        (appInfo.sandbox && appInfo.sandbox.snapshot)\n      ) {\n        if (appInstance?.vmSandbox) {\n          appInstance.global = appInstance.vmSandbox.global;\n        }\n        return;\n      }\n\n      rewriteAppAndSandbox(\n        Garfish,\n        appInstance,\n        new Sandbox({\n          namespace: appInfo.name,\n          addSourceList: appInstance.addSourceList.bind(appInstance),\n          baseUrl: appInstance.entryManager.url,\n          modules: compatibleOldModule(appInfo.sandbox?.modules || []),\n          fixBaseUrl: Boolean(appInfo.sandbox?.fixBaseUrl),\n          disableWith: Boolean(appInfo.sandbox?.disableWith),\n          strictIsolation: Boolean(appInfo.sandbox?.strictIsolation),\n\n          el: () => appInstance.htmlNode,\n          styleScopeId: () => appInstance.appContainer.id,\n          protectVariable: () => appInfo.protectVariable || [],\n          insulationVariable: () => {\n            return [\n              ...specialExternalVariables,\n              ...(appInfo.insulationVariable || []),\n            ].filter(Boolean);\n          },\n        }),\n      );\n    },\n\n    beforeUnmount(appInfo, appInstance) {\n      if (appInstance.vmSandbox) {\n        recordStyledComponentCSSRules(\n          appInstance.vmSandbox.dynamicStyleSheetElementSet,\n          appInstance.vmSandbox.styledComponentCSSRulesMap,\n        );\n      }\n    },\n\n    // If the app is uninstalled, the sandbox needs to clear all effects and then reset\n    afterUnmount(appInfo, appInstance, isCacheMode) {\n      // The caching pattern to retain the same context\n      if (appInstance.vmSandbox && !isCacheMode) {\n        appInstance.vmSandbox.reset();\n      }\n    },\n\n    afterMount(appInfo, appInstance) {\n      if (appInstance.vmSandbox) {\n        rebuildCSSRules(\n          appInstance.vmSandbox.dynamicStyleSheetElementSet,\n          appInstance.vmSandbox.styledComponentCSSRulesMap,\n        );\n        appInstance.vmSandbox.execScript(`\n          if (typeof window.onload === 'function') {\n            window.onload.call(window);\n          }\n        `);\n      }\n    },\n  };\n  return options;\n}\n\n// Export Garfish plugin\nexport function GarfishBrowserVm() {\n  return function (Garfish: interfaces.Garfish): interfaces.Plugin {\n    Garfish.getGlobalObject = function () {\n      return Sandbox.getNativeWindow();\n    };\n\n    Garfish.setGlobalValue = function (key, value) {\n      return (this.getGlobalObject()[key] = value);\n    };\n\n    Garfish.clearEscapeEffect = function (key, value) {\n      const global = this.getGlobalObject();\n      if (key in global) {\n        global[key] = value;\n      }\n    };\n    return createOptions(Garfish);\n  };\n}\n", "import { Loader } from '@garfish/loader';\nimport {\n  warn,\n  hasOwn,\n  makeMap,\n  isObject,\n  deepMerge,\n  evalWithEnv,\n  safeWrapper,\n  isPlainObject,\n  setDocCurrentScript,\n} from '@garfish/utils';\nimport type { interfaces } from '@garfish/core';\nimport { historyModule } from './modules/history';\nimport { networkModule } from './modules/network';\nimport { documentModule } from './modules/document';\nimport { UiEventOverride } from './modules/uiEvent';\nimport { localStorageModule } from './modules/storage';\nimport { listenerModule } from './modules/eventListener';\nimport { observerModule } from './modules/mutationObserver';\nimport { timeoutModule, intervalModule } from './modules/timer';\nimport { makeElInjector } from './dynamicNode';\nimport { sandboxLifecycle } from './lifecycle';\nimport { optimizeMethods, createFakeObject, sandboxMap } from './utils';\nimport { __garfishGlobal__, GARFISH_OPTIMIZE_NAME } from './symbolTypes';\nimport { Module, SandboxOptions, ReplaceGlobalVariables } from './types';\nimport {\n  createHas,\n  createGetter,\n  createSetter,\n  createDefineProperty,\n  createDeleteProperty,\n} from './proxyInterceptor/global';\n\nlet id = 0;\nconst defaultModules: Array<Module> = [\n  networkModule,\n  timeoutModule,\n  intervalModule,\n  historyModule,\n  documentModule,\n  listenerModule,\n  observerModule,\n  UiEventOverride,\n  localStorageModule,\n];\n\nconst isModule = (module: Window) => {\n  return isObject(module)\n    ? module[__garfishGlobal__ as any] !== undefined\n    : false;\n};\n\nconst addProxyWindowType = (module: Window, parentModule: Window) => {\n  if (!isModule(module)) {\n    module[__garfishGlobal__ as any] = parentModule;\n  }\n  return module;\n};\n\nexport class Sandbox {\n  public id = id++;\n  public type = 'vm';\n  public closed = true;\n  public initComplete = false;\n  public version = '1.12.0';\n  public global?: Window & typeof globalThis;\n  public loader: Loader;\n  public options: SandboxOptions;\n  public hooks = sandboxLifecycle();\n  public replaceGlobalVariables: ReplaceGlobalVariables;\n  public deferClearEffects: Set<() => void> = new Set();\n  public isExternalGlobalVariable: Set<PropertyKey> = new Set();\n  public isProtectVariable: (p: PropertyKey) => boolean;\n  public isInsulationVariable: (P: PropertyKey) => boolean;\n  public dynamicStyleSheetElementSet = new Set<HTMLStyleElement>();\n  public styledComponentCSSRulesMap = new WeakMap<\n    HTMLStyleElement,\n    CSSRuleList\n  >();\n\n  private optimizeCode = ''; // To optimize the with statement\n  private envVariable = '__GARFISH_SANDBOX_ENV_VAR__';\n\n  constructor(options: SandboxOptions) {\n    // Default sandbox config\n    const defaultOptions: SandboxOptions = {\n      baseUrl: '',\n      namespace: '',\n      modules: [],\n      fixBaseUrl: false,\n      disableWith: false,\n      strictIsolation: false,\n      el: () => null,\n      styleScopeId: () => '',\n      protectVariable: () => [],\n      insulationVariable: () => [],\n    };\n    this.options = isPlainObject(options)\n      ? deepMerge(defaultOptions, options)\n      : defaultOptions;\n\n    const { loaderOptions, protectVariable, insulationVariable } = this.options;\n    this.loader = new Loader(loaderOptions);\n    this.isProtectVariable = makeMap(protectVariable?.() || []);\n    this.isInsulationVariable = makeMap(insulationVariable?.() || []);\n\n    this.replaceGlobalVariables = {\n      createdList: [],\n      prepareList: [],\n      recoverList: [],\n      overrideList: {},\n    };\n    // Inject Global capture\n    makeElInjector(this.options);\n    // The default startup sandbox\n    this.start();\n    sandboxMap.set(this);\n  }\n\n  start() {\n    this.closed = false;\n    this.replaceGlobalVariables = this.getModuleData();\n    const { createdList, overrideList } = this.replaceGlobalVariables;\n    this.global = this.createProxyWindow(Object.keys(overrideList));\n\n    if (overrideList && this.global) {\n      for (const key in overrideList) {\n        this.global[key] = overrideList[key];\n      }\n    }\n    if (createdList) {\n      createdList.forEach((fn) => fn && fn(this.global));\n    }\n    if (!this.options.disableWith) {\n      this.optimizeCode = this.optimizeGlobalMethod();\n    }\n    this.initComplete = true;\n    this.hooks.lifecycle.stared.emit(this.global);\n  }\n\n  close() {\n    if (this.closed) return;\n    this.clearEffects();\n    this.closed = true;\n    this.global = undefined;\n    this.optimizeCode = '';\n    this.initComplete = false;\n    this.deferClearEffects.clear();\n    this.isExternalGlobalVariable.clear();\n    this.dynamicStyleSheetElementSet.clear();\n    this.replaceGlobalVariables.createdList = [];\n    this.replaceGlobalVariables.prepareList = [];\n    this.replaceGlobalVariables.recoverList = [];\n    this.replaceGlobalVariables.overrideList = [];\n    this.hooks.lifecycle.closed.emit();\n  }\n\n  reset() {\n    this.close();\n    this.start();\n  }\n\n  createProxyWindow(moduleKeys: Array<string> = []) {\n    const fakeWindow = createFakeObject(\n      window,\n      this.isInsulationVariable,\n      makeMap(moduleKeys),\n    );\n\n    const baseHandlers = {\n      get: createGetter(this),\n      set: createSetter(this),\n      defineProperty: createDefineProperty(this),\n      deleteProperty: createDeleteProperty(this),\n      getPrototypeOf() {\n        return Object.getPrototypeOf(window);\n      },\n    };\n\n    const parentHandlers = {\n      ...baseHandlers,\n      has: createHas(this),\n      getPrototypeOf() {\n        return Object.getPrototypeOf(window);\n      },\n    };\n\n    // In fact, they are all proxy windows, but the problem of `var a = xx` can be solved through has\n    const proxy = new Proxy(fakeWindow, parentHandlers);\n    const subProxy = new Proxy(fakeWindow, baseHandlers);\n\n    proxy.self = subProxy;\n    proxy.window = subProxy;\n    proxy.globalThis = subProxy;\n    proxy.__debug_sandbox__ = this; // This attribute is used for debugger\n    safeWrapper(() => {\n      // Cross-domain errors may occur during access\n      proxy.top = window.top === window ? subProxy : window.top;\n      proxy.parent = window.parent === window ? subProxy : window.parent;\n    });\n\n    addProxyWindowType(proxy, window);\n    return proxy;\n  }\n\n  getModuleData() {\n    const recoverList: Array<() => void> = [];\n    const createdList: Array<(context: Window | undefined) => void> = [];\n    const prepareList: Array<() => void> = [];\n    const overrideList = {};\n    const allModules = defaultModules.concat(this.options.modules ?? []);\n\n    for (const module of allModules) {\n      if (typeof module === 'function') {\n        const { recover, override, created, prepare } = module(this) || {};\n        if (recover) recoverList.push(recover);\n        if (created) createdList.push(created);\n        if (prepare) prepareList.push(prepare);\n        if (override) {\n          // The latter will overwrite the previous variable\n          for (const key in override) {\n            if ((typeof process !== \"undefined\" && process.env && process.env.NODE_ENV ? (process.env.NODE_ENV !== \"production\") : false) && overrideList[key]) {\n              warn(`\"${key}\" global variables are overwritten.`);\n            }\n            overrideList[key] = override[key];\n          }\n        }\n      }\n    }\n    return { recoverList, createdList, overrideList, prepareList };\n  }\n\n  clearEffects() {\n    this.hooks.lifecycle.beforeClearEffect.emit();\n    this.replaceGlobalVariables.recoverList.forEach((fn) => fn && fn());\n    // `deferClearEffects` needs to be put at the end\n    this.deferClearEffects.forEach((fn) => fn && fn());\n    this.hooks.lifecycle.afterClearEffect.emit();\n  }\n\n  optimizeGlobalMethod(tempEnvKeys: Array<string> = []) {\n    let code = '';\n    const methods = optimizeMethods.filter((p) => {\n      return (\n        // If the method does not exist in the current environment, do not care\n        p &&\n        !this.isProtectVariable(p) &&\n        !tempEnvKeys.includes(p) &&\n        hasOwn(this.global, p)\n      );\n    });\n\n    if (methods.length > 0) {\n      code = methods.reduce((prevCode, name) => {\n        // Can only use `let`, if you use `var`,\n        // declaring the characteristics in advance will cause you to fetch from with,\n        // resulting in a recursive loop\n        return `${prevCode} let ${name} = window.${name};`;\n      }, code);\n\n      if (this.global) {\n        this.global[`${GARFISH_OPTIMIZE_NAME}Methods`] = methods;\n        this.global[`${GARFISH_OPTIMIZE_NAME}UpdateStack`] = [];\n      }\n      code += `window.${GARFISH_OPTIMIZE_NAME}UpdateStack.push(function(k,v){eval(k+\"=v\")});`;\n    }\n\n    if (tempEnvKeys.length > 0) {\n      code = tempEnvKeys.reduce((prevCode, name) => {\n        return `${prevCode} let ${name} = ${this.envVariable}.${name};`;\n      }, code);\n    }\n    return code;\n  }\n\n  createExecParams(codeRef: { code: string }, env: Record<string, any>) {\n    const { disableWith } = this.options;\n    const { prepareList, overrideList } = this.replaceGlobalVariables;\n\n    if (prepareList) {\n      prepareList.forEach((fn) => fn && fn());\n    }\n\n    const params = {\n      window: this.global,\n      ...overrideList,\n    };\n\n    if (disableWith) {\n      Object.assign(params, env);\n    } else {\n      const envKeys = Object.keys(env);\n      const optimizeCode =\n        envKeys.length > 0\n          ? this.optimizeGlobalMethod(envKeys)\n          : this.optimizeCode;\n\n      codeRef.code = `with(window) {;${optimizeCode + codeRef.code}\\n}`;\n      params[this.envVariable] = env;\n    }\n\n    return params;\n  }\n\n  processExecError(\n    e: any,\n    url?: string,\n    env?: Record<string, any>,\n    options?: interfaces.ExecScriptOptions,\n  ) {\n    this.hooks.lifecycle.invokeError.emit(e, url, env, options);\n    // dispatch `window.onerror`\n    if (this.global && typeof this.global.onerror === 'function') {\n      const source = url || this.options.baseUrl;\n      const message = e instanceof Error ? e.message : String(e);\n      safeWrapper(() => {\n        this.global?.onerror?.call(this.global, message, source, null, null, e);\n      });\n    }\n    throw e;\n  }\n\n  execScript(\n    code: string,\n    env = {},\n    url = '',\n    options?: interfaces.ExecScriptOptions,\n  ) {\n    const codeRef = { code };\n    const { async } = options || {};\n\n    this.hooks.lifecycle.beforeInvoke.emit(codeRef, url, env, options);\n\n    const revertCurrentScript = setDocCurrentScript(\n      this.global?.document,\n      codeRef.code,\n      false,\n      url,\n      async,\n      options?.originScript,\n    );\n\n    try {\n      const params = this.createExecParams(codeRef, env);\n      codeRef.code += `\\n${url ? `//# sourceURL=${url}\\n` : ''}`;\n      evalWithEnv(codeRef.code, params, this.global);\n    } catch (e) {\n      this.processExecError(e, url, env, options);\n    } finally {\n      Promise.resolve().then(revertCurrentScript);\n    }\n\n    this.hooks.lifecycle.afterInvoke.emit(codeRef, url, env, options);\n  }\n\n  static getNativeWindow() {\n    let module = window;\n    while (isModule(module)) {\n      module = module[__garfishGlobal__ as any] as Window & typeof globalThis;\n    }\n    return module;\n  }\n\n  static canSupport() {\n    let support = true;\n    if (\n      !window.Proxy ||\n      !Array.prototype.includes ||\n      !String.prototype.includes\n    ) {\n      support = false;\n    }\n    // let statement\n    if (support) {\n      try {\n        new Function('let a = 666;');\n      } catch (e) {\n        support = false;\n      }\n    }\n    if (!support) {\n      warn(\n        'The current environment does not support \"vm sandbox\",' +\n          'Please use the \"snapshot sandbox\" instead.',\n      );\n    }\n    return support;\n  }\n}\n", "import { hasOwn, makeMap } from '@garfish/utils';\nimport { verifySetter } from '../proxyInterceptor/shared';\n\n// Can't set to proxy history variable\nconst passedKey = makeMap(['scrollRestoration']);\n\nexport function historyModule() {\n  const proto = Object.getPrototypeOf(window.history) || History.prototype;\n  const fakeHistory = Object.create(proto);\n\n  const proxyHistory = new Proxy(fakeHistory, {\n    get(target: any, p: PropertyKey) {\n      const value = hasOwn(target, p) ? target[p] : window.history[p];\n      return typeof value === 'function' ? value.bind(window.history) : value;\n    },\n\n    set(target: any, p: PropertyKey, value: any, receiver: any) {\n      const isPassKey = typeof p === 'string' && passedKey(p);\n      const verifySetterResult = verifySetter(\n        isPassKey ? history : null,\n        target,\n        p,\n        value,\n        receiver,\n      );\n      if (verifySetterResult !== undefined) {\n        return verifySetterResult;\n      } else {\n        return isPassKey\n          ? Reflect.set(history, p, value)\n          : Reflect.set(target, p, value, receiver);\n      }\n    },\n    // \"__proto__\" is not a standard attribute, it is temporarily not compatible\n    getPrototypeOf() {\n      return fakeHistory;\n    },\n  });\n\n  const fakeHistoryCtor = function History() {\n    throw new TypeError('Illegal constructor');\n  };\n  // Avoid side effects of prototype chain being changed\n  fakeHistoryCtor.prototype = fakeHistory;\n  fakeHistoryCtor.prototype.constructor = fakeHistoryCtor;\n\n  return {\n    override: {\n      history: proxyHistory,\n      History: fakeHistoryCtor,\n    },\n  };\n}\n", "import { warn, makeMap, isObject } from '@garfish/utils';\nimport { handlerParams } from '../utils';\n\nexport function isDataDescriptor(desc?: PropertyDescriptor) {\n  if (desc === undefined) return false;\n  return 'value' in desc || 'writable' in desc;\n}\n\nexport function isAccessorDescriptor(desc?: PropertyDescriptor) {\n  if (desc === undefined) return false;\n  return 'get' in desc || 'set' in desc;\n}\n\nexport function verifyGetterDescriptor(\n  target: any,\n  p: PropertyKey,\n  newValue: any,\n) {\n  const desc = Object.getOwnPropertyDescriptor(target, p);\n  // https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver\n  if (desc !== undefined && desc.configurable === false) {\n    if (isDataDescriptor(desc) && desc.writable === false) {\n      // https://tc39.es/ecma262/#sec-object.is\n      if (!Object.is(newValue, desc.value)) {\n        if ((typeof process !== \"undefined\" && process.env && process.env.NODE_ENV ? (process.env.NODE_ENV !== \"production\") : false)) {\n          // prettier-ignore\n          warn(`property \"${String(p)}\" is non-configurable and non-writable.`);\n        }\n        return 1;\n      }\n    } else if (isAccessorDescriptor(desc) && desc.get === undefined) {\n      return 2;\n    }\n  }\n  return 0;\n}\n\nexport function verifySetter(\n  proxyTarget: any,\n  target: any,\n  p: PropertyKey,\n  val: any,\n  receiver: any,\n) {\n  const verifyResult = verifySetterDescriptor(\n    // prettier-ignore\n    proxyTarget ? proxyTarget : (receiver || target),\n    p,\n    val,\n  );\n\n  let result;\n  if (verifyResult > 0) {\n    if (verifyResult === 1 || verifyResult === 2) result = false;\n    if (verifyResult === 3) result = true;\n  }\n\n  return result;\n}\n\nexport function verifySetterDescriptor(\n  target: any,\n  p: PropertyKey,\n  newValue: any,\n) {\n  const desc = Object.getOwnPropertyDescriptor(target, p);\n  // https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver\n  if (desc !== undefined && desc.configurable === false) {\n    if (isDataDescriptor(desc) && desc.writable === false) {\n      // https://tc39.es/ecma262/#sec-object.is\n      if (!Object.is(newValue, desc.value)) {\n        if ((typeof process !== \"undefined\" && process.env && process.env.NODE_ENV ? (process.env.NODE_ENV !== \"production\") : false)) {\n          // prettier-ignore\n          warn(`property \"${String(p)}\" is non-configurable and non-writable.`);\n        }\n        return 1;\n      } else {\n        return 3;\n      }\n    } else if (isAccessorDescriptor(desc) && desc.set === undefined) {\n      return 2;\n    }\n  }\n  return 0;\n}\n\nfunction safeToString(thing) {\n  try {\n    return thing.toString();\n  } catch (e) {\n    return '[toString failed]';\n  }\n}\n\nexport function isConstructor(fn: () => void | FunctionConstructor) {\n  const fp = fn.prototype;\n  const hasConstructor =\n    fp && fp.constructor === fn && Object.getOwnPropertyNames(fp).length > 1;\n  const functionStr = !hasConstructor && safeToString(fn);\n\n  return (\n    hasConstructor ||\n    /^function\\s+[A-Z]/.test(functionStr) ||\n    /^class\\b/.test(functionStr)\n  );\n}\n\nconst buildInProps = makeMap([\n  'length',\n  'caller',\n  'callee',\n  'arguments',\n  'prototype',\n  Symbol.hasInstance,\n]);\n\nfunction transferProps(o: Function, n: Function) {\n  for (const key of Reflect.ownKeys(o)) {\n    if (buildInProps(key)) continue;\n    const desc = Object.getOwnPropertyDescriptor(n, key);\n    if (desc && desc.writable) {\n      n[key] = o[key];\n    }\n  }\n}\n\n// 1. This points to the context of the fn target function\n// 2. Assure the goal after the bind function prototype method be replaced after the prototype method would not be affected\n// 3. Assure the objective function after the bind instanceof in line with expectations\n// 4. Ensure that bind after the objective function of normal static methods available\n// 5. After the bind after the objective function is new to instantiate, pointing to their own\nexport function bind(fn, context: any) {\n  const fNOP = function () {};\n  function bound(this: any) {\n    const args = handlerParams(arguments);\n    if (this instanceof bound) {\n      const obj = new fn(...args);\n      Object.setPrototypeOf(obj, bound.prototype);\n      return obj;\n    } else {\n      return fn.apply(context, args);\n    }\n  }\n\n  // Record origin function\n  bound.$native = fn;\n  transferProps(fn, bound);\n\n  if (fn.prototype) {\n    // `Function.prototype` doesn't have a prototype property\n    fNOP.prototype = fn.prototype;\n  }\n  bound.prototype = new fNOP();\n\n  // fix \"instanceof\"\n  if (Symbol.hasInstance) {\n    Object.defineProperty(bound, Symbol.hasInstance, {\n      configurable: true,\n      value(instance) {\n        const op = fn.prototype;\n        return isObject(op) || typeof op === 'function'\n          ? instance instanceof fn\n          : false;\n      },\n    });\n  }\n  return bound;\n}\n", "import { hasOwn, makeMap, nextTick } from '@garfish/utils';\nimport { Sandbox } from './sandbox';\nimport { FakeWindow } from './types';\nimport {\n  __proxyNode__,\n  __sandboxMap__,\n  __elementSandboxTag__,\n} from './symbolTypes';\n\n// https://tc39.es/ecma262/#sec-function-properties-of-the-global-object\nconst esGlobalMethods =\n  // Function properties of the global object // Function properties of the global object\n  (\n    'eval,isFinite,isNaN,parseFloat,parseInt,' +\n    // URL handling functions\n    'decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    // Constructor properties of the global object\n    'Array,ArrayBuffer,BigInt,BigInt64Array,BigUint64Array,Boolean,DataView,Date,Error,EvalError,' +\n    'FinalizationRegistry,Float32Array,Float64Array,Function,Int8Array,Int16Array,Int32Array,Map,Number,' +\n    'Object,Promise,Proxy,RangeError,ReferenceError,RegExp,Set,SharedArrayBuffer,String,Symbol,SyntaxError,' +\n    'TypeError,Uint8Array,Uint8ClampedArray,Uint16Array,Uint32Array,URIError,WeakMap,WeakRef,WeakSet,' +\n    // Other Properties of the Global Object\n    'Atomics,JSON,Math,Reflect,'\n  ).split(',');\n\nconst nativeCodeMethods = 'hasOwnProperty,'.split(',');\n\nexport const isEsGlobalMethods = makeMap(esGlobalMethods);\nexport const isNativeCodeMethods = makeMap(nativeCodeMethods);\n\n// Need to optimize, avoid from the with\n// Can't filter document, eval keywords, such as document in handling parentNode useful\nexport const optimizeMethods = [...esGlobalMethods].filter((v) => v !== 'eval');\n\n// The sandbox may be used alone, to ensure that the `sandboxMap` is globally unique,\n// because we will only rewrite `appendChild` once\nlet sandboxList: Map<number, Sandbox> = new Map();\nif (!(window as FakeWindow)[__sandboxMap__]) {\n  (window as FakeWindow)[__sandboxMap__] = sandboxList;\n} else {\n  sandboxList = (window as FakeWindow)[__sandboxMap__];\n}\n\nexport const sandboxMap = {\n  sandboxMap: sandboxList,\n\n  get(element: Element): Sandbox | undefined {\n    if (!element) return;\n    const sandboxId = element[__elementSandboxTag__];\n    if (typeof sandboxId !== 'number') return;\n    return this.sandboxMap.get(sandboxId);\n  },\n\n  setElementTag(element: Element, sandbox: Sandbox) {\n    if (!element) return;\n    element[__elementSandboxTag__] = sandbox.id;\n  },\n\n  set(sandbox: Sandbox) {\n    if (this.sandboxMap.get(sandbox.id)) return;\n    this.sandboxMap.set(sandbox.id, sandbox);\n  },\n\n  del(sandbox: Sandbox) {\n    this.sandboxMap.delete(sandbox.id);\n  },\n};\n\nexport function handlerParams(args: IArguments | Array<any>) {\n  args = Array.isArray(args) ? args : Array.from(args);\n  return args.map((v) => {\n    return v && v[__proxyNode__] ? v[__proxyNode__] : v;\n  });\n}\n\n// Container node, because it changes all the time, take it as you use it\nexport function rootElm(sandbox: Sandbox) {\n  const container = sandbox && sandbox.options.el;\n  return container && container();\n}\n\nexport function isInIframe() {\n  return window?.parent?.__GARFISH__ !== window?.__GARFISH__;\n}\n\n// Copy \"window\" and \"document\"\nexport function createFakeObject(\n  target: Record<PropertyKey, any>,\n  filter?: (key: PropertyKey) => boolean,\n  isWritable?: (key: PropertyKey) => boolean,\n) {\n  const fakeObject = {};\n  const propertyMap = {};\n  const storageBox = Object.create(null); // Store changed value\n  const propertyNames = Object.getOwnPropertyNames(target);\n  const def = (p: string) => {\n    const descriptor = Object.getOwnPropertyDescriptor(target, p);\n\n    if (descriptor?.configurable) {\n      const hasGetter = hasOwn(descriptor, 'get');\n      const hasSetter = hasOwn(descriptor, 'set');\n      const canWritable = typeof isWritable === 'function' && isWritable(p);\n\n      if (hasGetter) {\n        // prettier-ignore\n        descriptor.get = () => hasOwn(storageBox, p)\n          ? storageBox[p]\n          : target[p];\n      }\n      if (hasSetter) {\n        descriptor.set = (val) => {\n          storageBox[p] = val;\n          return true;\n        };\n      }\n      if (canWritable) {\n        if (descriptor.writable === false) {\n          descriptor.writable = true;\n        } else if (hasGetter) {\n          descriptor.set = (val) => {\n            storageBox[p] = val;\n            return true;\n          };\n        }\n      }\n      Object.defineProperty(fakeObject, p, Object.freeze(descriptor));\n    }\n  };\n  propertyNames.forEach((p) => {\n    propertyMap[p] = true;\n    typeof filter === 'function' ? !filter(p) && def(p) : def(p);\n  });\n  // \"prop\" maybe in prototype chain\n  for (const prop in target) {\n    !propertyMap[prop] && def(prop);\n  }\n  return fakeObject as any;\n}\n\nlet setting = true;\nexport function microTaskHtmlProxyDocument(proxyDocument) {\n  // The HTML parent node into agent for the document\n  // In micro tasks replace primary node\n  const html = document.children[0];\n  if (html && html.parentNode !== proxyDocument) {\n    Object.defineProperty(html, 'parentNode', {\n      value: proxyDocument,\n      configurable: true,\n    });\n\n    if (setting) {\n      setting = false;\n      // Do not use micro tasks, Element will appear in the task placed in nextTick after node\n      nextTick(() => {\n        setting = true;\n        Object.defineProperty(html, 'parentNode', {\n          value: document,\n          configurable: true,\n        });\n      });\n    }\n  }\n}\n\nexport function isStyledComponentsLike(element: HTMLStyleElement) {\n  // A styled-components liked element has no textContent but keep the rules in its sheet.cssRules.\n  return (\n    element instanceof HTMLStyleElement &&\n    !element.textContent &&\n    element.sheet?.cssRules.length\n  );\n}\n", "export const GARFISH_NAMESPACE_PREFIX = '__Garfish__';\nexport const GARFISH_OPTIMIZE_NAME = '__garfish_optimize__';\nexport const __proxyNode__ = Symbol.for('garfish.proxyNode');\nexport const __domWrapper__ = Symbol.for('garfish.domWrapper');\nexport const __windowBind__ = Symbol.for('garfish.windowBind');\nexport const __sandboxMap__ = Symbol.for('garfish.sandboxMap');\nexport const __documentBind__ = Symbol.for('garfish.documentBind');\nexport const __garfishGlobal__ = Symbol.for('garfish.globalObject');\nexport const __elementSandboxTag__ = Symbol.for('garfish.elementSandboxTag');\n", "import {\n  hasOwn,\n  isPromise,\n  isAbsolute,\n  transformUrl,\n  toWsProtocol,\n} from '@garfish/utils';\nimport { Sandbox } from '../sandbox';\n\nexport function networkModule(sandbox: Sandbox) {\n  const baseUrl = sandbox.options.baseUrl;\n  const wsSet = new Set<fakeWebSocket>();\n  const xhrSet = new Set<fakeXMLHttpRequest>();\n  const fetchSet = new Set<AbortController>();\n  const needFix = (url) =>\n    sandbox.options.fixBaseUrl &&\n    baseUrl &&\n    typeof url === 'string' &&\n    !isAbsolute(url);\n\n  class fakeXMLHttpRequest extends XMLHttpRequest {\n    constructor() {\n      super();\n      xhrSet.add(this);\n    }\n\n    open() {\n      // Async request\n      if (arguments[2] === false) {\n        xhrSet.delete(this);\n      }\n      if (needFix(arguments[1])) {\n        arguments[1] = baseUrl\n          ? transformUrl(baseUrl, arguments[1])\n          : arguments[1];\n      }\n\n      const url = arguments[1];\n\n      if(sandbox.options.addSourceList){\n        sandbox.options.addSourceList({\n          tagName: 'xmlhttprequest',\n          url,\n        });\n      }\n      return super.open.apply(this, arguments);\n    }\n\n    abort() {\n      xhrSet.delete(this);\n      return super.abort.apply(this, arguments);\n    }\n  }\n\n  class fakeWebSocket extends WebSocket {\n    constructor(url, protocols?: string | string[]) {\n      if (needFix(url) && baseUrl) {\n        const baseWsUrl = toWsProtocol(baseUrl);\n        url = transformUrl(baseWsUrl, arguments[1]);\n      }\n      super(url, protocols);\n      wsSet.add(this);\n    }\n\n    close() {\n      wsSet.delete(this);\n      return super.close.apply(this, arguments);\n    }\n  }\n\n  // `fetch` is not constructor\n  const fakeFetch = (input, options: RequestInit = {}) => {\n    if (needFix(input) && baseUrl) {\n      input = transformUrl(baseUrl, input);\n    }\n    if(sandbox.options.addSourceList){\n      sandbox.options.addSourceList({ tagName: 'fetch', url: input });\n    }\n    let controller;\n    if (!hasOwn(options, 'signal') && window.AbortController) {\n      controller = new window.AbortController();\n      fetchSet.add(controller);\n      options.signal = controller.signal;\n    }\n    const result = window.fetch(input, options);\n    return controller && isPromise(result)\n      ? result.finally(() => fetchSet.delete(controller))\n      : result;\n  };\n\n  return {\n    override: {\n      WebSocket: fakeWebSocket as any,\n      XMLHttpRequest: fakeXMLHttpRequest as any,\n      fetch: fakeFetch,\n    },\n\n    recover() {\n      wsSet.forEach((ws) => {\n        if (typeof ws.close === 'function') ws.close();\n      });\n      xhrSet.forEach((xhr) => {\n        if (typeof xhr.abort === 'function') xhr.abort();\n      });\n      fetchSet.forEach((ctor) => {\n        if (typeof ctor.abort === 'function') ctor.abort();\n      });\n\n      wsSet.clear();\n      xhrSet.clear();\n      fetchSet.clear();\n    },\n  };\n}\n", "import {\n  hasOwn,\n  makeMap,\n  isObject,\n  findTarget,\n  safari13Deal,\n  __MockBody__,\n  __MockHead__,\n} from '@garfish/utils';\nimport { Sandbox } from '../sandbox';\nimport { rootElm, sandboxMap } from '../utils';\nimport { __documentBind__ } from '../symbolTypes';\nimport { bind, verifyGetterDescriptor, verifySetterDescriptor } from './shared';\n\nconst passedKey = makeMap(['title', 'cookie', 'onselectstart', 'ondragstart']);\n\nconst queryFunctions = makeMap([\n  'querySelector',\n  'querySelectorAll',\n  'getElementById',\n  'getElementsByTagName',\n  'getElementsByTagNameNS',\n  'getElementsByClassName',\n]);\n\n// document proxy getter\nexport function createGetter(sandbox: Sandbox) {\n  return (target: any, p: PropertyKey, receiver?: any) => {\n    if (p === 'activeElement') {\n      return Reflect.get(document, p);\n    }\n\n    const rootNode = rootElm(sandbox);\n    const strictIsolation = sandbox.options.strictIsolation;\n    const value = hasOwn(target, p)\n      ? Reflect.get(target, p, receiver)\n      : Reflect.get(document, p);\n\n    // Provide hooks for users to return specific values themselves\n    const hooksRes = sandbox.hooks.lifecycle.documentGetter.emit({\n      value,\n      rootNode,\n      propName: p,\n      proxyDocument: target,\n      customValue: null,\n    });\n\n    if (hooksRes.customValue) {\n      return hooksRes.customValue;\n    }\n\n    const setSandboxRef = (el) => {\n      if (isObject(el)) {\n        sandboxMap.setElementTag(el, sandbox);\n        if ((typeof process !== \"undefined\" && process.env && process.env.NODE_ENV ? (process.env.NODE_ENV !== \"production\") : false)) {\n          el.__SANDBOX__ = true;\n        }\n      }\n      return el;\n    };\n\n    if (rootNode) {\n      if (p === 'createElement') {\n        return function (tagName, options) {\n          const el = value.call(document, tagName, options);\n          return setSandboxRef(el);\n        };\n      } else if (p === 'createTextNode') {\n        return function (data) {\n          const el = value.call(document, data);\n          return setSandboxRef(el);\n        };\n      } else if (p === 'head') {\n        return findTarget(rootNode, ['head', `div[${__MockHead__}]`]) || value;\n      }\n\n      // rootNode is a Shadow dom\n      if (strictIsolation) {\n        if (p === 'body') {\n          // When the node is inserted, if it is a pop-up scene,\n          // it needs to be placed globally, so it is not placed outside by default.\n          return findTarget(rootNode, ['body', `div[${__MockBody__}]`]);\n        } else if (queryFunctions(p)) {\n          return p === 'getElementById'\n            ? (id) => rootNode.querySelector(`#${id}`)\n            : rootNode[p].bind(rootNode);\n        }\n      }\n    }\n\n    if (typeof value === 'function') {\n      let newValue = hasOwn(value, __documentBind__)\n        ? value[__documentBind__]\n        : null;\n      if (!newValue) newValue = bind(value, document);\n\n      const verifyResult = verifyGetterDescriptor(target, p, newValue);\n      if (verifyResult > 0) {\n        if (verifyResult === 1) return value;\n        if (verifyResult === 2) return undefined;\n      }\n      value[__documentBind__] = newValue;\n      return newValue;\n    }\n    return value;\n  };\n}\n\nconst safariProxyDocumentDealHandler = safari13Deal();\n\n// document proxy setter\nexport function createSetter(sandbox) {\n  return (target: any, p: PropertyKey, value: any, receiver: any) => {\n    const rootNode = rootElm(sandbox);\n    const verifyResult = verifySetterDescriptor(\n      // prettier-ignore\n      typeof p === 'string' && passedKey(p)\n        ? document\n        : (receiver || target),\n      p,\n      value,\n    );\n    if (verifyResult > 0) {\n      if (verifyResult === 1 || verifyResult === 2) return false;\n      if (verifyResult === 3) return true;\n    }\n\n    // Application area of the ban on selected, if users want to ban the global need to set on the main application\n    if (p === 'onselectstart' || p === 'ondragstart') {\n      if (rootNode) {\n        return Reflect.set(rootNode, p, value);\n      } else {\n        return Reflect.set(document, p, value);\n      }\n    }\n\n    if (typeof p === 'string' && passedKey(p)) {\n      return Reflect.set(document, p, value);\n    } else {\n      safariProxyDocumentDealHandler.triggerSet();\n      return Reflect.set(target, p, value, receiver);\n    }\n  };\n}\n\n// document proxy defineProperty\nexport function createDefineProperty() {\n  return (target: any, p: PropertyKey, descriptor: PropertyDescriptor) => {\n    safariProxyDocumentDealHandler.handleDescriptor(descriptor);\n    return passedKey(p)\n      ? Reflect.defineProperty(document, p, descriptor)\n      : Reflect.defineProperty(target, p, descriptor);\n  };\n}\n\n// document proxy has\nexport function createHas() {\n  return (target: any, p: PropertyKey) => {\n    if (p === 'activeElement') return Reflect.has(document, p);\n    return hasOwn(target, p) || Reflect.has(document, p);\n  };\n}\n", "import { Sandbox } from '../sandbox';\nimport { __proxyNode__ } from '../symbolTypes';\nimport { createFakeObject, microTaskHtmlProxyDocument } from '../utils';\nimport {\n  createHas,\n  createGetter,\n  createSetter,\n  createDefineProperty,\n} from '../proxyInterceptor/document';\n\nexport const documentModule = (sandbox: Sandbox) => {\n  let proxyDocument = Object.create(document);\n  const getter = createGetter(sandbox);\n\n  const fakeDocument = createFakeObject(document);\n\n  const fakeDocumentProto = new Proxy(fakeDocument, {\n    get: (...args) => {\n      microTaskHtmlProxyDocument(proxyDocument);\n      return getter(...args);\n    },\n    has: createHas(),\n  });\n  \n\n  proxyDocument = new Proxy(\n    Object.create(fakeDocumentProto, {\n      currentScript: {\n        value: null,\n        writable: true,\n      },\n      [__proxyNode__]: {\n        writable: false,\n        configurable: false,\n        value: document,\n      },\n    }),\n    {\n      set: createSetter(sandbox),\n      defineProperty: createDefineProperty(),\n      getPrototypeOf () {\n        return HTMLDocument.prototype || Document.prototype;\n      },\n    },\n  );\n\n  return {\n    override: {\n      document: proxyDocument,\n    },\n  };\n};\n", "import { getType } from '@garfish/utils';\n\n// The logic of UIEvent is referenced from qiankun typography\n// https://github.com/umijs/qiankun/pull/593/files\n// TODO: fix normal mouse event instanceof MouseEvent === false\nexport class MouseEventPatch extends MouseEvent {\n  constructor(typeArg: string, mouseEventInit?: MouseEventInit) {\n    if (mouseEventInit && getType(mouseEventInit.view) === 'window') {\n      mouseEventInit.view = window;\n    }\n    super(typeArg, mouseEventInit);\n  }\n}\n\nexport function UiEventOverride() {\n  return {\n    override: {\n      MouseEvent: MouseEventPatch as any,\n    },\n  };\n}\n", "import { Sandbox } from '../sandbox';\nimport { GARFISH_NAMESPACE_PREFIX } from '../symbolTypes';\n\nexport class CusStorage {\n  prefix: string;\n  namespace: string;\n  rawStorage: Storage;\n\n  constructor(namespace: string, rawStorage: Storage) {\n    this.rawStorage = rawStorage;\n    this.namespace = namespace;\n    this.prefix = `${GARFISH_NAMESPACE_PREFIX}${namespace}__`;\n  }\n\n  get length() {\n    return this.getKeys().length;\n  }\n\n  private getKeys() {\n    return Object.keys(this.rawStorage).filter((key) =>\n      key.startsWith(this.prefix),\n    );\n  }\n\n  // Get the \"n\" key of the current namespace, you need to remove the prefix\n  key(n: number) {\n    const key = this.getKeys()[n];\n    return key ? key.substring(this.prefix.length) : null;\n  }\n\n  getItem(keyName: string) {\n    return this.rawStorage.getItem(`${this.prefix + keyName}`);\n  }\n\n  setItem(keyName: string, keyValue: string) {\n    this.rawStorage.setItem(`${this.prefix + keyName}`, keyValue);\n  }\n\n  removeItem(keyName: string) {\n    this.rawStorage.removeItem(`${this.prefix + keyName}`);\n  }\n\n  clear() {\n    this.getKeys().forEach((key) => {\n      this.rawStorage.removeItem(key);\n    });\n  }\n}\n\nexport function localStorageModule(sandbox: Sandbox) {\n  const namespace = sandbox.options.namespace;\n  return {\n    override: {\n      localStorage: new CusStorage(namespace, localStorage),\n      sessionStorage: new CusStorage(namespace, sessionStorage),\n    },\n  };\n}\n", "// import { filterAndWrapEventListener } from '@garfish/utils';\nimport { Sandbox } from '../sandbox';\n\ntype Opts = boolean | AddEventListenerOptions;\ntype Listener = EventListenerOrEventListenerObject;\n\nexport function listenerModule(_sandbox: Sandbox) {\n  const listeners = new Map<string, Listener[]>();\n  const rawAddEventListener = window.addEventListener;\n  const rawRemoveEventListener = window.removeEventListener;\n\n  function addListener(\n    this: any,\n    type: string,\n    listener: Listener,\n    options?: Opts,\n  ) {\n    const curListeners = listeners.get(type) || [];\n    listeners.set(type, [...curListeners, listener]);\n\n    // This has been revised\n    rawAddEventListener.call(\n      this,\n      type,\n      // filterAndWrapEventListener(\n      //   type,\n      //   listener,\n      //   _sandbox.options.sourceList.map((item) => item.url),\n      // ),\n      listener,\n      options,\n    );\n  }\n\n  function removeListener(\n    this: any,\n    type: string,\n    listener: Listener,\n    options?: boolean | EventListenerOptions,\n  ) {\n    const curListeners = listeners.get(type) || [];\n    const idx = curListeners.indexOf(listener);\n    if (idx !== -1) {\n      curListeners.splice(idx, 1);\n    }\n    listeners.set(type, [...curListeners]);\n    rawRemoveEventListener.call(this, type, listener, options);\n  }\n\n  const recover = () => {\n    listeners.forEach((listener, key) => {\n      listener.forEach((fn) => {\n        rawRemoveEventListener.call(window, key, fn);\n      });\n    });\n    listeners.clear();\n  };\n\n  return {\n    recover,\n    override: {\n      addEventListener: addListener.bind(window),\n      removeEventListener: removeListener.bind(window),\n    },\n    created(global: Sandbox['global']) {\n      const fakeDocument = global?.document;\n      if (fakeDocument) {\n        fakeDocument.addEventListener = addListener.bind(document);\n        fakeDocument.removeEventListener = removeListener.bind(document);\n      }\n    },\n  };\n}\n", "import { Sandbox } from '../sandbox';\n\nexport function observerModule(_sandbox: Sandbox) {\n  const observerSet = new Set<MutationObserver>();\n\n  class ProxyMutationObserver extends MutationObserver {\n    constructor(cb: MutationCallback) {\n      super(cb);\n      observerSet.add(this);\n    }\n  }\n\n  const recover = () => {\n    observerSet.forEach((observer) => {\n      if (typeof observer.disconnect === 'function') observer.disconnect();\n    });\n    observerSet.clear();\n  };\n\n  return {\n    recover,\n    override: {\n      MutationObserver: ProxyMutationObserver as Function,\n    },\n  };\n}\n", "const rawSetTimeout = window.setTimeout;\nconst rawClearTimeout = window.clearTimeout;\nconst rawSetInterval = window.setInterval;\nconst rawClearInterval = window.clearInterval;\n\nexport const timeoutModule = () => {\n  const timeout = new Set<number>();\n\n  const setTimeout = (handler: TimerHandler, ms?: number, ...args: any[]) => {\n    const timeoutId = rawSetTimeout(handler, ms, ...args);\n    timeout.add(timeoutId);\n    return timeoutId;\n  };\n\n  const clearTimeout = (timeoutId: number) => {\n    timeout.delete(timeoutId);\n    rawClearTimeout(timeoutId);\n  };\n\n  const recover = () => {\n    timeout.forEach((timeoutId) => {\n      rawClearTimeout(timeoutId);\n    });\n  };\n\n  return {\n    recover,\n    override: {\n      setTimeout,\n      clearTimeout,\n    },\n  };\n};\n\nexport const intervalModule = () => {\n  const timeout = new Set<number>();\n\n  const setInterval = (\n    callback: (...args: any[]) => void,\n    ms: number,\n    ...args: any[]\n  ) => {\n    const intervalId = rawSetInterval(callback, ms, ...args);\n    timeout.add(intervalId);\n    return intervalId;\n  };\n\n  const clearInterval = (intervalId: number) => {\n    timeout.delete(intervalId);\n    rawClearInterval(intervalId);\n  };\n\n  const recover = () => {\n    timeout.forEach((intervalId) => {\n      rawClearInterval(intervalId);\n    });\n  };\n\n  return {\n    recover,\n    override: {\n      setInterval,\n      clearInterval,\n      // webpack lazy use Promise\n      // Promise is polyfill\n      // polyfill Promise include Promise._setImmediate use setImmediate methods\n      // setImmediate polyfill postMessage as marco tasks\n      // postMessage callback judge event.source === window\n      // use setTimeout as setImmediate avoid judge fail\n      setImmediate: (fn) => setTimeout(fn, 0),\n    },\n  };\n};\n", "import { makeMap, safeWrapper, warn } from '@garfish/utils';\nimport { StyleManager } from '@garfish/loader';\nimport { __domWrapper__ } from '../symbolTypes';\nimport { injectHandlerParams } from './processParams';\nimport { DynamicNodeProcessor, rawElementMethods } from './processor';\nimport { isInIframe, sandboxMap, isStyledComponentsLike } from '../utils';\nimport { SandboxOptions } from '../types';\n\nconst mountElementMethods = [\n  'append',\n  'appendChild',\n  'insertBefore',\n  'insertAdjacentElement',\n];\nconst removeChildElementMethods = ['removeChild'];\n\nconst ignoreElementTimingTags = makeMap([\n  'STYLE',\n  'SCRIPTS',\n  'LINK',\n  'META',\n  'TITLE',\n]);\n\nfunction injector(current: Function, methodName: string) {\n  return function (this: Element) {\n    // prettier-ignore\n    const el = methodName === 'insertAdjacentElement'\n      ? arguments[1]\n      : arguments[0];\n    const sandbox = sandboxMap.get(el);\n    const originProcess = () => current.apply(this, arguments);\n\n    if (sandbox) {\n      if (el && this?.tagName?.toLowerCase() === 'style') {\n        const manager = new StyleManager(el.textContent);\n        const { baseUrl, namespace, styleScopeId } = sandbox.options;\n        manager.correctPath(baseUrl);\n        manager.setScope({\n          appName: namespace,\n          rootElId: styleScopeId!(),\n        });\n        el.textContent = manager.transformCode(manager.styleCode);\n        return originProcess();\n      } else {\n        const processor = new DynamicNodeProcessor(el, sandbox, methodName);\n        return processor.append(this, arguments, originProcess);\n      }\n    }\n\n    // custom performance Element Timing API\n    // https://web.dev/custom-metrics/#element-timing-api\n    safeWrapper(() => {\n      if (ignoreElementTimingTags(el.tagName)) return;\n      if (\n        el?.setAttribute &&\n        typeof el?.setAttribute === 'function' &&\n        !el?.getAttribute('elementtiming')\n      ) {\n        el?.setAttribute(\n          'elementtiming',\n          sandbox\n            ? `${(sandbox as any).options.namespace}-element-timing`\n            : 'element-timing',\n        );\n      }\n    });\n\n    if (sandbox) {\n      const processor = new DynamicNodeProcessor(el, sandbox, methodName);\n      return processor.append(this, arguments, originProcess);\n    } else {\n      return originProcess();\n    }\n  };\n}\n\nfunction injectorRemoveChild(current: Function, methodName: string) {\n  return function (this: Element) {\n    const el = arguments[0];\n    const sandbox = el && sandboxMap.get(el);\n    const originProcess = () => {\n      // Sandbox may have applied sub dom side effects to delete\n      // by removeChild deleted by the tag determine whether have been removed\n      return current.apply(this, arguments);\n    };\n\n    if (sandbox) {\n      const processor = new DynamicNodeProcessor(el, sandbox, methodName);\n      return processor.removeChild(this, originProcess);\n    }\n    return originProcess();\n  };\n}\n\n// Handle `ownerDocument` to prevent elements created by `ownerDocument.createElement` from escaping\nfunction handleOwnerDocument() {\n  Object.defineProperty(window.Element.prototype, 'ownerDocument', {\n    get() {\n      const sandbox = this && sandboxMap.get(this);\n      const realValue = Reflect.get(\n        window.Node.prototype,\n        'ownerDocument',\n        this,\n      );\n      return sandbox ? sandbox.global.document : realValue;\n    },\n    set() {\n      (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV ? (process.env.NODE_ENV !== \"production\") : false) && warn('\"ownerDocument\" is a read-only attribute.');\n    },\n  });\n}\n\nexport function makeElInjector(sandboxConfig: SandboxOptions) {\n  if ((makeElInjector as any).hasInject) return;\n  (makeElInjector as any).hasInject = true;\n\n  if (typeof window.Element === 'function') {\n    // iframe can read html container this can't point to proxyDocument has Illegal invocation error\n    if (sandboxConfig.fixBaseUrl) safeWrapper(()=> handleOwnerDocument());\n    const rewrite = (\n      methods: Array<string>,\n      builder: typeof injector | typeof injectorRemoveChild,\n    ) => {\n      for (const name of methods) {\n        const fn = window.Element.prototype[name];\n        if (typeof fn !== 'function' || fn[__domWrapper__]) {\n          continue;\n        }\n        rawElementMethods[name] = fn;\n        const wrapper = builder(fn, name);\n        wrapper[__domWrapper__] = true;\n        window.Element.prototype[name] = wrapper;\n      }\n    };\n    rewrite(mountElementMethods, injector);\n    rewrite(removeChildElementMethods, injectorRemoveChild);\n  }\n\n  injectHandlerParams();\n}\n\nexport function recordStyledComponentCSSRules(\n  dynamicStyleSheetElementSet: Set<HTMLStyleElement>,\n  styledComponentCSSRulesMap: WeakMap<HTMLStyleElement, CSSRuleList>,\n) {\n  dynamicStyleSheetElementSet.forEach((styleElement) => {\n    if (isStyledComponentsLike(styleElement) && styleElement.sheet) {\n      styledComponentCSSRulesMap.set(styleElement, styleElement.sheet.cssRules);\n    }\n  });\n}\n\nexport function rebuildCSSRules(\n  dynamicStyleSheetElementSet: Set<HTMLStyleElement>,\n  styledComponentCSSRulesMap: WeakMap<HTMLStyleElement, CSSRuleList>,\n) {\n  dynamicStyleSheetElementSet.forEach((styleElement) => {\n    const cssRules = styledComponentCSSRulesMap.get(styleElement);\n    if (cssRules && (isStyledComponentsLike(styleElement) || cssRules.length)) {\n      for (let i = 0; i < cssRules.length; i++) {\n        const cssRule = cssRules[i];\n        // re-insert rules for styled-components element\n        styleElement.sheet?.insertRule(\n          cssRule.cssText,\n          styleElement.sheet?.cssRules.length,\n        );\n      }\n    }\n  });\n}\n", "import { handlerParams } from '../utils';\n\nexport function injectHandlerParams() {\n  if (window.MutationObserver) {\n    const rawObserver = window.MutationObserver.prototype.observe;\n    MutationObserver.prototype.observe = function () {\n      return rawObserver.apply(this, handlerParams(arguments));\n    };\n  }\n\n  // in iframe not modify activeElement\n  const desc = Object.getOwnPropertyDescriptor(\n    window.Document.prototype,\n    'activeElement',\n  );\n  const rawActiveEl = desc && desc.get;\n  if (rawActiveEl) {\n    Object.defineProperty(window.Document.prototype, 'activeElement', {\n      get(...args) {\n        return rawActiveEl.apply(handlerParams([this])[0], handlerParams(args));\n      },\n    });\n  }\n}\n", "import { StyleManager, JavaScriptManager } from '@garfish/loader';\nimport {\n  def,\n  warn,\n  DOMApis,\n  makeMap,\n  isJsType,\n  isCssType,\n  safeWrapper,\n  findTarget,\n  __MockBody__,\n  __MockHead__,\n  transformUrl,\n  sourceListTags,\n  __REMOVE_NODE__,\n} from '@garfish/utils';\nimport { Sandbox } from '../sandbox';\nimport { rootElm, isStyledComponentsLike } from '../utils';\n\nconst isInsertMethod = makeMap(['insertBefore', 'insertAdjacentElement']);\n\nexport const rawElementMethods = Object.create(null);\n\nexport class DynamicNodeProcessor {\n  private el: any; // any Element\n  private tagName: string;\n  private sandbox: Sandbox;\n  private DOMApis: DOMApis;\n  private methodName: string;\n  private rootElement: Element | ShadowRoot | Document;\n  private nativeAppend = rawElementMethods['appendChild'];\n  private nativeRemove = rawElementMethods['removeChild'];\n\n  constructor(el, sandbox, methodName) {\n    this.el = el;\n    this.sandbox = sandbox;\n    this.methodName = methodName;\n    this.rootElement = rootElm(sandbox) || document;\n    this.DOMApis = new DOMApis(sandbox.global.document);\n    this.tagName = el.tagName ? el.tagName.toLowerCase() : '';\n  }\n\n  private is(tag: string) {\n    return this.tagName === tag;\n  }\n\n  private fixResourceNodeUrl(el: any) {\n    const baseUrl = this.sandbox.options.baseUrl;\n    if (baseUrl) {\n      const src = el.getAttribute('src');\n      const href = el.getAttribute('href');\n      src && (el.src = transformUrl(baseUrl, src));\n      href && (el.href = transformUrl(baseUrl, href));\n      const url = el.src || el.href;\n\n      if (url && this.sandbox.options.addSourceList) {\n        this.sandbox.options.addSourceList({\n          tagName: el.tagName,\n          url,\n        });\n      }\n    }\n  }\n\n  // Put it in the next macro task to ensure that the current synchronization script is executed\n  private dispatchEvent(type: string, errInfo?: ErrorEventInit) {\n    Promise.resolve().then(() => {\n      const isError = type === 'error';\n      let event: Event & { __byGarfish__?: boolean };\n\n      if (isError && errInfo) {\n        event = new ErrorEvent(type, {\n          ...errInfo,\n          message: errInfo.error.message,\n        });\n      } else {\n        event = new Event(type);\n      }\n      event.__byGarfish__ = true;\n      Object.defineProperty(event, 'target', { value: this.el });\n      this.el.dispatchEvent(event);\n      isError && window.dispatchEvent(event);\n    });\n  }\n\n  // Load dynamic link node\n  private addDynamicLinkNode(callback: (styleNode: HTMLStyleElement) => void) {\n    const { href, type } = this.el;\n\n    if (!type || isCssType({ src: href, type })) {\n      if (href) {\n        const { baseUrl, namespace, styleScopeId } = this.sandbox.options;\n        const fetchUrl = baseUrl ? transformUrl(baseUrl, href) : href;\n\n        this.sandbox.loader\n          .load<StyleManager>({\n            scope: namespace,\n            url: fetchUrl,\n            defaultContentType: type,\n          })\n          .then(({ resourceManager: styleManager }) => {\n            if (styleManager) {\n              styleManager.correctPath();\n              if (styleScopeId) {\n                styleManager.setScope({\n                  appName: namespace,\n                  rootElId: styleScopeId(),\n                });\n              }\n              callback(styleManager.renderAsStyleElement());\n            } else {\n              warn(\n                `Invalid resource type \"${type}\", \"${href}\" can't generate styleManager`,\n              );\n            }\n            this.dispatchEvent('load');\n          })\n          .catch((e) => {\n            (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV ? (process.env.NODE_ENV !== \"production\") : false) && warn(e);\n            this.dispatchEvent('error', {\n              error: e,\n              filename: fetchUrl,\n            });\n          });\n      }\n    } else {\n      if ((typeof process !== \"undefined\" && process.env && process.env.NODE_ENV ? (process.env.NODE_ENV !== \"production\") : false)) {\n        warn(`Invalid resource type \"${type}\", \"${href}\"`);\n      }\n    }\n    // To ensure the processing node to normal has been removed\n    const linkCommentNode = this.DOMApis.createLinkCommentNode(href) as Comment;\n    this.el[__REMOVE_NODE__] = () =>\n      this.DOMApis.removeElement(linkCommentNode);\n    return linkCommentNode;\n  }\n\n  // Load dynamic js script\n  private addDynamicScriptNode() {\n    const { src, type, crossOrigin } = this.el;\n    const isModule = type === 'module';\n    const code = this.el.textContent || this.el.text || '';\n\n    if (!type || isJsType({ src, type })) {\n      // The \"src\" higher priority\n      const { baseUrl, namespace } = this.sandbox.options;\n      if (src) {\n        const fetchUrl = baseUrl ? transformUrl(baseUrl, src) : src;\n        this.sandbox.loader\n          .load<JavaScriptManager>({\n            scope: namespace,\n            url: fetchUrl,\n            crossOrigin,\n            defaultContentType: type,\n          })\n          .then(\n            (manager) => {\n              if (manager.resourceManager) {\n                const {\n                  resourceManager: { url, scriptCode },\n                } = manager;\n                // It is necessary to ensure that the code execution error cannot trigger the `el.onerror` event\n                this.sandbox.execScript(scriptCode, {}, url, {\n                  isModule,\n                  noEntry: true,\n                  originScript: this.el,\n                });\n              } else {\n                warn(\n                  `Invalid resource type \"${type}\", \"${src}\" can't generate scriptManager`,\n                );\n              }\n              this.dispatchEvent('load');\n            },\n            (e) => {\n              (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV ? (process.env.NODE_ENV !== \"production\") : false) && warn(e);\n              this.dispatchEvent('error', {\n                error: e,\n                filename: fetchUrl,\n              });\n            },\n          );\n      } else if (code) {\n        this.sandbox.execScript(code, {}, baseUrl, { noEntry: true, originScript: this.el, });\n      }\n      // To ensure the processing node to normal has been removed\n      const scriptCommentNode = this.DOMApis.createScriptCommentNode({\n        src,\n        code,\n      });\n      this.el[__REMOVE_NODE__] = () =>\n        this.DOMApis.removeElement(scriptCommentNode);\n      return scriptCommentNode;\n    }\n    return this.el;\n  }\n\n  // When append an empty link node and then add href attribute\n  private monitorChangesOfLinkNode() {\n    if (this.el.modifyFlag) return;\n\n    const mutator = new MutationObserver((mutations) => {\n      if (this.el.modifyFlag) return;\n      for (const { type, attributeName } of mutations) {\n        if (type === 'attributes') {\n          if (attributeName === 'rel' || attributeName === 'stylesheet') {\n            if (this.el.modifyFlag) return;\n            if (this.el.rel === 'stylesheet' && this.el.href) {\n              this.el.disabled = this.el.modifyFlag = true;\n              const commentNode = this.addDynamicLinkNode((styleNode) => {\n                commentNode.parentNode?.replaceChild(styleNode, commentNode);\n              });\n              this.el.parentNode?.replaceChild(commentNode, this.el);\n            }\n          }\n        }\n      }\n    });\n    // https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/disconnect\n    mutator.observe(this.el, { attributes: true });\n  }\n\n  private monitorChangesOfStyle() {\n    const { baseUrl, namespace, styleScopeId } = this.sandbox.options;\n    const rootElId = styleScopeId?.();\n\n    const modifyStyleCode = (styleCode: string | null) => {\n      if (styleCode) {\n        const manager = new StyleManager(styleCode);\n        manager.correctPath(baseUrl);\n        if (rootElId) {\n          manager.setScope({\n            rootElId,\n            appName: namespace,\n          });\n        }\n        styleCode = manager.transformCode(styleCode);\n      }\n      return styleCode;\n    };\n\n    const mutator = new MutationObserver((mutations) => {\n      for (const { type, target, addedNodes } of mutations) {\n        if (type === 'childList') {\n          const el = target as HTMLStyleElement;\n          if (isStyledComponentsLike(el) && el.sheet) {\n            const originAddRule = el.sheet.insertRule;\n            el.sheet.insertRule = function () {\n              arguments[0] = modifyStyleCode(arguments[0]);\n              return originAddRule.apply(this, arguments);\n            };\n          } else {\n            if (addedNodes[0]) {\n              addedNodes[0].textContent = modifyStyleCode(\n                addedNodes[0].textContent,\n              );\n            }\n          }\n        }\n      }\n    });\n    mutator.observe(this.el, { childList: true });\n  }\n\n  private findParentNodeInApp(parentNode: Element, defaultInsert?: string) {\n    if (parentNode === document.body) {\n      return findTarget(this.rootElement, [\n        'body',\n        `div[${__MockBody__}]`,\n      ]) as Element;\n    } else if (parentNode === document.head) {\n      return findTarget(this.rootElement, [\n        'head',\n        `div[${__MockHead__}]`,\n      ]) as Element;\n    }\n\n    // Add the location of the destination node is not a container to the container of the application\n    // Has not been added to the container, or cannot be searched through document in shadow dom\n    if (\n      this.rootElement.contains(parentNode) ||\n      !document.contains(parentNode)\n    ) {\n      return parentNode;\n    }\n\n    if (defaultInsert === 'head') {\n      return findTarget(this.rootElement, [\n        'head',\n        `div[${__MockHead__}]`,\n      ]) as Element;\n    } else if (defaultInsert === 'body') {\n      return findTarget(this.rootElement, [\n        'body',\n        `div[${__MockBody__}]`,\n      ]) as Element;\n    }\n    return parentNode;\n  }\n\n  append(context: Element, args: IArguments, originProcess: Function) {\n    let convertedNode;\n    let parentNode = context;\n    const { baseUrl, namespace, styleScopeId } = this.sandbox.options;\n\n    // Deal with some static resource nodes\n    if (sourceListTags.includes(this.tagName)) {\n      this.fixResourceNodeUrl(this.el);\n    }\n\n    // Add dynamic script node by loader\n    if (this.is('script')) {\n      parentNode = this.findParentNodeInApp(context, 'body');\n      convertedNode = this.addDynamicScriptNode();\n    }\n    // The style node needs to be placed in the sandbox root container\n    else if (this.is('style')) {\n      parentNode = this.findParentNodeInApp(context, 'head');\n      const manager = new StyleManager(this.el.textContent);\n      manager.correctPath(baseUrl);\n      if (styleScopeId) {\n        manager.setScope({\n          appName: namespace,\n          rootElId: styleScopeId(),\n        });\n      }\n      this.el.textContent = manager.transformCode(manager.styleCode);\n      convertedNode = this.el;\n      this.sandbox.dynamicStyleSheetElementSet.add(this.el);\n      this.monitorChangesOfStyle();\n    }\n    // The link node of the request css needs to be changed to style node\n    else if (this.is('link')) {\n      parentNode = this.findParentNodeInApp(context, 'head');\n      if (this.el.rel === 'stylesheet' && this.el.href) {\n        convertedNode = this.addDynamicLinkNode((styleNode) =>\n          this.nativeAppend.call(parentNode, styleNode),\n        );\n      } else {\n        convertedNode = this.el;\n        this.monitorChangesOfLinkNode();\n      }\n    }\n\n    // Collect nodes that escape the container node\n    if (\n      !this.rootElement.contains(parentNode) &&\n      document.contains(parentNode)\n    ) {\n      if (parentNode !== this.rootElement) {\n        this.sandbox.deferClearEffects.add(() => {\n          this.DOMApis.removeElement(this.el);\n          return this.el;\n        });\n      }\n    }\n\n    // fix innerHTML dom iframe\u3001img src\n    if (this.el && this.el.querySelectorAll) {\n      let needFixDom = this.el.querySelectorAll('iframe,img,video,link,script,audio,style');\n      if (needFixDom.length > 0) {\n        needFixDom.forEach((dom)=>{\n          safeWrapper(()=> this.fixResourceNodeUrl(dom));\n        });\n      }\n    }\n\n    // Fix the bug of react hmr\n    if (this.is('iframe') && typeof this.el.onload === 'function') {\n      const { el, sandbox } = this;\n      const originOnload = el.onload;\n      el.onload = function () {\n        safeWrapper(() => def(el.contentWindow, 'parent', sandbox.global));\n        return originOnload.apply(this, arguments);\n      };\n    }\n\n    if (convertedNode) {\n      // If it is \"insertBefore\" or \"insertAdjacentElement\" method, no need to rewrite when added to the container\n      if (\n        isInsertMethod(this.methodName) &&\n        this.rootElement.contains(context) &&\n        args[1]?.parentNode === context\n      ) {\n        return originProcess();\n      }\n\n      // Emit sandbox `appendNode` event\n      this.sandbox.hooks.lifecycle.appendNode.emit(\n        parentNode,\n        this.el,\n        convertedNode,\n        this.tagName,\n      );\n      return this.nativeAppend.call(parentNode, convertedNode);\n    }\n    return originProcess();\n  }\n\n  removeChild(context: Element, originProcess: Function) {\n    // remove comment node and return the real node\n    if (typeof this.el[__REMOVE_NODE__] === 'function') {\n      this.el[__REMOVE_NODE__]();\n      return this.el;\n    }\n\n    if (this.is('style') || this.is('link') || this.is('script')) {\n      const parentNode = this.findParentNodeInApp(\n        context,\n        this.is('script') ? 'body' : 'head',\n      );\n\n      if (this.el.parentNode === parentNode) {\n        if (this.sandbox.dynamicStyleSheetElementSet.has(this.el)) {\n          this.sandbox.dynamicStyleSheetElementSet.delete(this.el);\n        }\n        return this.nativeRemove.call(parentNode, this.el);\n      }\n    }\n    return originProcess();\n  }\n}\n", "import { SyncHook, SyncWaterfallHook, PluginSystem } from '@garfish/hooks';\nimport type { interfaces } from '@garfish/core';\nimport type { FakeWindow } from './types';\n\nexport interface DocumentGetterData {\n  value: any;\n  propName: PropertyKey;\n  proxyDocument: Document;\n  rootNode?: null | Element | ShadowRoot;\n  customValue?: any;\n}\n\nexport function sandboxLifecycle() {\n  return new PluginSystem({\n    closed: new SyncHook<[], void>(),\n    stared: new SyncHook<[FakeWindow?], void>(),\n    appendNode: new SyncHook<[Element, Element, Element, string], void>(),\n    documentGetter: new SyncWaterfallHook<DocumentGetterData>('documentGetter'),\n    beforeClearEffect: new SyncHook<[], void>(),\n    afterClearEffect: new SyncHook<[], void>(),\n    beforeInvoke: new SyncHook<\n      [\n        { code: string },\n        string?,\n        Record<string, any>?,\n        interfaces.ExecScriptOptions?,\n      ],\n      void\n    >(),\n    afterInvoke: new SyncHook<\n      [\n        { code: string },\n        string?,\n        Record<string, any>?,\n        interfaces.ExecScriptOptions?,\n      ],\n      void\n    >(),\n    invokeError: new SyncHook<\n      [Error, string?, Record<string, any>?, interfaces.ExecScriptOptions?],\n      void\n    >(),\n  });\n}\n", "import { warn, hasOwn, safari13Deal } from '@garfish/utils';\nimport { Sandbox } from '../sandbox';\nimport { isEsGlobalMethods, isNativeCodeMethods } from '../utils';\nimport { __windowBind__, GARFISH_OPTIMIZE_NAME } from '../symbolTypes';\nimport {\n  bind,\n  isConstructor,\n  verifyGetterDescriptor,\n  verifySetterDescriptor,\n} from './shared';\n\n// window proxy getter\nexport function createGetter(sandbox: Sandbox) {\n  return (target: Window, p: PropertyKey, receiver: any) => {\n    if (p === Symbol.unscopables) return undefined;\n    let value;\n    const { overrideList } = sandbox.replaceGlobalVariables;\n\n    if (sandbox.isProtectVariable(p)) {\n      // Don't pass the \"receiver\", otherwise it will cause the wrong point of this\n      return Reflect.get(window, p);\n    } else if (sandbox.isInsulationVariable(p)) {\n      value = Reflect.get(target, p, receiver);\n    } else {\n      value = hasOwn(target, p)\n        ? Reflect.get(target, p, receiver)\n        : Reflect.get(window, p);\n    }\n\n    if (typeof value === 'function') {\n      // The following situations do not require \"bind\"\n      //  1. The global method on the native es standard\n      //  2. Methods internal to the sandbox or rewritten by the user\n      //  3. Constructor\n      // After filtering out custom and native es functions, only bom and dom functions are left\n      // Make judgments such as constructors for these environment-related functions to further narrow the scope of bind\n      if (\n        isEsGlobalMethods(p) ||\n        isNativeCodeMethods(p) ||\n        hasOwn(overrideList, p) ||\n        isConstructor(value) ||\n        sandbox.isExternalGlobalVariable.has(p)\n      ) {\n        return value;\n      }\n    } else {\n      return value;\n    }\n\n    const newValue = hasOwn(value, __windowBind__)\n      ? value[__windowBind__]\n      : bind(value, window);\n    const verifyResult = verifyGetterDescriptor(target, p, newValue);\n    if (verifyResult > 0) {\n      if (verifyResult === 1) return value;\n      if (verifyResult === 2) return undefined;\n    }\n    value[__windowBind__] = newValue;\n    return newValue;\n  };\n}\n\nconst safariProxyWindowDealHandler = safari13Deal();\n\n// window proxy setter\nexport function createSetter(sandbox: Sandbox) {\n  return (target: Window, p: PropertyKey, value: unknown, receiver: any) => {\n    const verifyResult = verifySetterDescriptor(\n      // prettier-ignore\n      sandbox.isProtectVariable(p)\n        ? window\n        : receiver\n          ? receiver\n          : target,\n      p,\n      value,\n    );\n    // If the value is the same, the setting success will be returned directly. Cannot be set and return to failure directly.\n    // \"Reflect.set\" does not perform this part of processing by default in safari\n    if (verifyResult > 0) {\n      if (verifyResult === 1 || verifyResult === 2) return false;\n      if (verifyResult === 3) return true;\n    }\n\n    if (sandbox.isProtectVariable(p)) {\n      return Reflect.set(window, p, value);\n    } else {\n      // current is setting\n      safariProxyWindowDealHandler.triggerSet();\n      const success = Reflect.set(target, p, value, receiver);\n      if (success) {\n        if (sandbox.initComplete) {\n          sandbox.isExternalGlobalVariable.add(p);\n        }\n\n        // Update need optimization variables\n        if (sandbox.global) {\n          const methods = sandbox.global[`${GARFISH_OPTIMIZE_NAME}Methods`];\n          if (Array.isArray(methods)) {\n            if (methods.includes(p)) {\n              const updateStack =\n                sandbox.global[`${GARFISH_OPTIMIZE_NAME}UpdateStack`];\n              updateStack.forEach((fn) => fn(p, value));\n            }\n          }\n        }\n      }\n      return success;\n    }\n  };\n}\n\n// window proxy defineProperty\nexport function createDefineProperty(sandbox: Sandbox) {\n  return (target: Window, p: PropertyKey, descriptor: PropertyDescriptor) => {\n    safariProxyWindowDealHandler.handleDescriptor(descriptor);\n\n    if (sandbox.isProtectVariable(p)) {\n      return Reflect.defineProperty(window, p, descriptor);\n    } else {\n      const success = Reflect.defineProperty(target, p, descriptor);\n      if (sandbox.initComplete && success) {\n        sandbox.isExternalGlobalVariable.add(p);\n      }\n      return success;\n    }\n  };\n}\n\n// window proxy deleteProperty\nexport function createDeleteProperty(sandbox: Sandbox) {\n  return (target: Window, p: PropertyKey) => {\n    if (hasOwn(target, p)) {\n      delete target[p as any];\n      if (sandbox.initComplete && sandbox.isExternalGlobalVariable.has(p)) {\n        sandbox.isExternalGlobalVariable.delete(p);\n      }\n    } else if ((typeof process !== \"undefined\" && process.env && process.env.NODE_ENV ? (process.env.NODE_ENV !== \"production\") : false)) {\n      if (hasOwn(window, p) && sandbox.isProtectVariable(p)) {\n        warn(`The \"${String(p)}\" is global protect variable.\"`);\n      }\n    }\n    return true;\n  };\n}\n\n// window proxy has\nexport function createHas(sandbox: Sandbox) {\n  return (_target: Window, p: PropertyKey) => {\n    if (sandbox.isProtectVariable(p)) return false;\n    if ((sandbox as any).envVariable === p) return false;\n    return true;\n  };\n}\n"],
  "mappings": "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",
  "names": []
}
