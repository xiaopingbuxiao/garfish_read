{
  "version": 3,
  "sources": ["../../src/patchers/event.ts", "../../src/patchers/interceptor.ts", "../../src/patchers/style.ts", "../../src/patchers/history.ts", "../../src/patchers/interval.ts", "../../src/patchers/variable.ts", "../../src/patchers/webpackjsonp.ts", "../../src/sandbox.ts", "../../src/index.ts"],
  "sourcesContent": ["let rawAddEventListener: any;\nlet rawRemoveEventListener: any;\n\nexport class PatchEvent {\n  private listenerMap = new Map<string, EventListenerOrEventListenerObject[]>();\n  constructor() {}\n\n  public activate() {\n    // restore pre event\n    this.listenerMap.forEach((listeners, type) =>\n      [...listeners].forEach((listener) =>\n        window.addEventListener(type, listener),\n      ),\n    );\n\n    if (!rawAddEventListener || !rawRemoveEventListener) {\n      rawAddEventListener = window.addEventListener;\n      rawRemoveEventListener = window.removeEventListener;\n    }\n\n    window.addEventListener = (\n      type: string,\n      listener: EventListenerOrEventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ) => {\n      const listeners = this.listenerMap.get(type) || [];\n      this.listenerMap.set(type, [...listeners, listener]);\n      return rawAddEventListener.call(window, type, listener, options);\n    };\n    window.removeEventListener = (\n      type: string,\n      listener: EventListenerOrEventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ) => {\n      const storedTypeListeners = this.listenerMap.get(type);\n      if (\n        storedTypeListeners &&\n        storedTypeListeners.length &&\n        storedTypeListeners.indexOf(listener) !== -1\n      ) {\n        storedTypeListeners.splice(storedTypeListeners.indexOf(listener), 1);\n      }\n      return rawRemoveEventListener.call(window, type, listener, options);\n    };\n  }\n\n  public deactivate() {\n    this.listenerMap.forEach((listeners, type) =>\n      [...listeners].forEach((listener) =>\n        window.removeEventListener(type, listener),\n      ),\n    );\n\n    // event\uFF0C\u5728window\u539F\u578B\u94FE\u4E0A\uFF0C\u5C06window\u4E0A\u8986\u76D6\u7684\u4EE3\u7406\u4E8B\u4EF6\u5220\u9664\u5373\u53EF\n    // delete window.removeEventListener;\n    // delete window.addEventListener;\n    window.removeEventListener = rawRemoveEventListener;\n    window.addEventListener = rawAddEventListener;\n  }\n}\n", "export type SnapshotDiff = {\n  created: Snapshot;\n  removed: Snapshot;\n};\n\nexport function isStyledComponentsLike(element: HTMLStyleElement) {\n  // A styled-components liked element has no textContent but keep the rules in its sheet.cssRules.\n  return (\n    element instanceof HTMLStyleElement &&\n    !element.textContent &&\n    element.sheet?.cssRules.length\n  );\n}\n\nexport class Snapshot {\n  constructor(public arrDoms: Array<HTMLElement>) {\n    this.arrDoms = arrDoms;\n  }\n\n  static take(target: HTMLElement): Snapshot;\n  static take<T extends Element = Element>(\n    nodeList: HTMLCollectionOf<T>,\n  ): Snapshot;\n  static take(nodeList?: NodeList): Snapshot;\n  static take(target: HTMLElement | HTMLCollection | NodeList = document.head) {\n    let list: Array<HTMLElement>;\n    if ((target as HTMLElement).childNodes) {\n      list = Array.prototype.slice.call((target as HTMLElement).childNodes);\n    } else {\n      list = Array.prototype.slice.call(target);\n    }\n    return new Snapshot(list);\n  }\n\n  diff(s: Snapshot): SnapshotDiff {\n    if (!s) {\n      return {\n        created: new Snapshot([]),\n        removed: new Snapshot([]),\n      };\n    }\n\n    return {\n      created: new Snapshot(\n        this.arrDoms.filter((d) => s.arrDoms.indexOf(d) === -1),\n      ),\n      removed: new Snapshot(\n        s.arrDoms.filter((d) => this.arrDoms.indexOf(d) === -1),\n      ),\n    };\n  }\n}\n\nexport class Interceptor {\n  dynamicStyleSheetElementSet: Set<HTMLStyleElement>;\n  styledComponentCSSRulesMap: WeakMap<HTMLStyleElement, CSSRuleList>;\n  constructor(public dom: HTMLElement = document.head) {\n    this.dom = dom;\n    this.dynamicStyleSheetElementSet = new Set<HTMLStyleElement>();\n    this.styledComponentCSSRulesMap = new WeakMap<\n      HTMLStyleElement,\n      CSSRuleList\n    >();\n  }\n\n  add(from: Snapshot): void;\n  add(created: Snapshot, removed: Snapshot): void;\n  add(createdOrSnapshot: Snapshot, removed?: Snapshot) {\n    let created: Snapshot;\n    if (!removed) {\n      const diff = Snapshot.take(this.dom).diff(createdOrSnapshot);\n      created = diff.created;\n      removed = diff.removed;\n    } else {\n      created = createdOrSnapshot;\n    }\n    created.arrDoms.reduce((prev, val) => {\n      prev.appendChild(val);\n      if (val instanceof HTMLStyleElement) {\n        const cssRules = this.styledComponentCSSRulesMap.get(val);\n        if (cssRules && cssRules.length) {\n          for (let i = 0; i < cssRules.length; i++) {\n            const cssRule = cssRules[i];\n            // re-insert rules for styled-components element\n            val.sheet?.insertRule(cssRule.cssText, val.sheet?.cssRules.length);\n          }\n        }\n      }\n      return prev;\n    }, this.dom);\n    removed.arrDoms.reduce((prev, val) => {\n      prev.removeChild(val);\n      return prev;\n    }, this.dom);\n  }\n\n  remove(to: Snapshot): void;\n  remove(created: Snapshot, removed: Snapshot): void;\n  remove(createdOrSnapshot: Snapshot, removed?: Snapshot) {\n    let created: Snapshot;\n    if (!removed) {\n      const diff = Snapshot.take(this.dom).diff(createdOrSnapshot);\n      created = diff.created;\n      removed = diff.removed;\n    } else {\n      created = createdOrSnapshot;\n    }\n    created.arrDoms.reduce((prev, val) => {\n      if (\n        val instanceof HTMLStyleElement &&\n        isStyledComponentsLike(val) &&\n        val?.sheet?.cssRules\n      ) {\n        this.styledComponentCSSRulesMap.set(val, val.sheet.cssRules);\n      }\n      prev.removeChild(val);\n      return prev;\n    }, this.dom);\n    removed.arrDoms.reduce((prev, val) => {\n      prev.appendChild(val);\n      return prev;\n    }, this.dom);\n  }\n}\n", "import { Interceptor, Snapshot, SnapshotDiff } from './interceptor';\n\ninterface EffectCt {\n  src: string;\n  outerHTML: string;\n  content: string;\n}\n\ninterface EffectMap {\n  style: Array<EffectCt>;\n  script: Array<EffectCt>;\n  other: Array<EffectCt>;\n}\n\nexport class PatchStyle {\n  public headInterceptor: Interceptor;\n  private domSnapshotBefore!: Snapshot;\n  private domSnapshotMutated!: SnapshotDiff | null;\n\n  constructor() {\n    this.headInterceptor = new Interceptor(document.head);\n  }\n\n  public activate() {\n    // \u8BB0\u5F55\u5F53\u524Ddom\u8282\u70B9\u3001\u6062\u590D\u4E4B\u524Ddom\u8282\u70B9\u526F\u4F5C\u7528\n    this.domSnapshotBefore = Snapshot.take();\n    if (this.domSnapshotMutated)\n      this.headInterceptor.add(\n        this.domSnapshotMutated.created,\n        this.domSnapshotMutated.removed,\n      );\n  }\n\n  public deactivate() {\n    // \u6062\u590D\u6C99\u76D2\u8FD0\u884C\u524Ddom\u8282\u70B9\u73AF\u5883\uFF0C\u5E76\u5C06\u5DEE\u5F02\u503C\u8FDB\u884C\u7F13\u5B58\n    const domSnapshot = Snapshot.take();\n    this.domSnapshotMutated = domSnapshot.diff(this.domSnapshotBefore);\n    if (!this.domSnapshotMutated) return;\n    this.headInterceptor.remove(\n      this.domSnapshotMutated.created,\n      this.domSnapshotMutated.removed,\n    );\n  }\n\n  private formateCtx(arrDoms: Array<HTMLElement>) {\n    const effectMap: EffectMap = {\n      style: [],\n      script: [],\n      other: [],\n    };\n\n    arrDoms.forEach((dom) => {\n      let type: 'other' | 'style' | 'script' = 'other';\n      if (/css/.test((dom as any).type)) type = 'style';\n      if (/javascript/.test((dom as any).type)) type = 'script';\n      effectMap[type].push({\n        src: (dom as any).src,\n        outerHTML: dom.outerHTML,\n        content: dom.innerText,\n      });\n    });\n\n    return effectMap;\n  }\n}\n", "let rawPushState: any;\nlet rawReplaceState: any;\n\nexport class PatchHistory {\n  public activate() {\n    if (!rawPushState || !rawReplaceState) {\n      rawPushState = window.history.pushState;\n      rawReplaceState = window.history.replaceState;\n    }\n  }\n\n  public deactivate() {\n    window.history.pushState = rawPushState;\n    window.history.replaceState = rawReplaceState;\n  }\n}\n", "const rawInterval = window.setInterval;\nconst rawClearInterval = window.clearInterval;\n\nexport class PatchInterval {\n  private intervals: Array<number> = [];\n  constructor() {}\n\n  public activate() {\n    // @ts-ignore\n    window.setInterval = (\n      handler: Function,\n      timeout?: number,\n      ...args: any[]\n    ) => {\n      const intervalId = rawInterval(handler, timeout, ...args);\n      this.intervals = [...this.intervals, intervalId];\n      return intervalId;\n    };\n\n    // @ts-ignore\n    window.clearInterval = (intervalId: number) => {\n      this.intervals = this.intervals.filter((id) => id !== intervalId);\n      return rawClearInterval(intervalId);\n    };\n  }\n\n  public deactivate(_clearEffects?: boolean) {\n    if (_clearEffects) {\n      this.intervals.forEach((id) => window.clearInterval(id));\n    }\n    window.setInterval = rawInterval;\n    window.clearInterval = rawClearInterval;\n  }\n}\n", "const hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn(obj: any, key: PropertyKey): boolean {\n  return hasOwnProperty.call(obj, key);\n}\n\nexport class PatchGlobalVal {\n  public snapshotOriginal = new Map();\n  private snapshotMutated: any = new Map();\n  private whiteList: Array<PropertyKey> = [\n    'location',\n    'addEventListener',\n    'removeEventListener',\n    'webpackJsonp',\n  ];\n  // ,'addEventListener','removeEventListener','clearInterval','setInterval','webkitStorageInfo'\n  constructor(\n    public targetToProtect: any = typeof window !== 'undefined'\n      ? window\n      : globalThis,\n    public protectVariable: Array<PropertyKey> = [],\n  ) {\n    this.targetToProtect = targetToProtect;\n    this.protectVariable = protectVariable;\n    // this.whiteList = [...this.whiteList, ...GarConfig.protectVariable!];\n    this.whiteList = [...this.whiteList, ...protectVariable];\n  }\n\n  protected safeIterator(fn: Function) {\n    // Skip the variables not traverse\n    // Do not include a symbol\n    for (const i in this.targetToProtect) {\n      if (this.whiteList.indexOf(i) !== -1) {\n        continue;\n      }\n      const prop = Object.getOwnPropertyDescriptor(this.targetToProtect, i);\n      if (!prop || !prop.writable) {\n        continue;\n      }\n      if (hasOwn(this.targetToProtect, i)) {\n        fn(i);\n      }\n    }\n  }\n\n  // 1.Trigger hooks, life cycle willActivate enabled (going to)\n  // 2.Will disable the current group of other box, and triggers the switch life cycle\n  // 3.The current window object properties for caching\n  // 4.Restore the sandbox side effects during operation\n  public activate() {\n    // Recorded before the global environment, restore side effects of a variable\n    this.safeIterator((i: string) => {\n      this.snapshotOriginal.set(i, this.targetToProtect[i]);\n    });\n\n    this.snapshotMutated.forEach((val, mutateKey) => {\n      this.targetToProtect[mutateKey] = this.snapshotMutated.get(mutateKey);\n    });\n  }\n\n  // 1.Restore the sandbox during startup variables change, record the change record\n  // 2.Restore the sandbox during startup to delete variables, record the change record\n  public deactivate() {\n    const deleteMap: any = {};\n    const updateMap: any = {};\n    const addMap: any = {};\n\n    // Restore the sandbox before running Windows properties of environment, and difference value for caching\n    this.safeIterator((normalKey: string) => {\n      if (\n        this.snapshotOriginal.get(normalKey) !==\n        (this.targetToProtect[normalKey] as any)\n      ) {\n        this.snapshotMutated.set(normalKey, this.targetToProtect[normalKey]); // deleted key will be defined as undefined on\n        this.targetToProtect[normalKey] = this.snapshotOriginal.get(normalKey); // || this.targetToProtect[i]\n\n        // Collection of delete, modify variables\n        if (this.targetToProtect[normalKey] === undefined) {\n          addMap[normalKey] = this.snapshotMutated.get(normalKey);\n        } else {\n          updateMap[normalKey] = this.snapshotMutated.get(normalKey);\n        }\n      }\n      this.snapshotOriginal.delete(normalKey);\n    });\n\n    this.snapshotOriginal.forEach((val, deleteKey) => {\n      this.snapshotMutated.set(deleteKey, this.targetToProtect[deleteKey]);\n      this.targetToProtect[deleteKey] = this.snapshotOriginal.get(deleteKey);\n      deleteMap[deleteKey] = this.targetToProtect[deleteKey];\n    });\n\n    // For developers, let them know clear what side effects of a variable\n    // channel.emit('sandbox-variable', {\n    //   update: updateMap,\n    //   removed: deleteMap,\n    //   add: addMap,\n    // });\n  }\n}\n", "declare global {\n  interface Window {\n    webpackJsonp?: any[];\n  }\n}\n\nexport class PatchWebpackJsonp {\n  preWebpackJsonp?: any[];\n\n  currentWebpackJsonp?: any[];\n\n  public activate() {\n    this.preWebpackJsonp = window.webpackJsonp;\n    window.webpackJsonp = this.currentWebpackJsonp;\n  }\n\n  public deactivate() {\n    this.currentWebpackJsonp = window.webpackJsonp;\n    window.webpackJsonp = this.preWebpackJsonp;\n  }\n}\n", "import { PatchEvent } from './patchers/event';\nimport { PatchStyle } from './patchers/style';\nimport { PatchHistory } from './patchers/history';\nimport { PatchInterval } from './patchers/interval';\nimport { PatchGlobalVal } from './patchers/variable';\nimport { PatchWebpackJsonp } from './patchers/webpackjsonp';\n\nexport class Sandbox {\n  public type = 'snapshot';\n  public isRunning: Boolean = false;\n  private patchList: Array<\n    PatchGlobalVal | PatchStyle | PatchInterval | PatchEvent | PatchWebpackJsonp\n  > = [];\n\n  constructor(\n    public name: string,\n    public protectVariable: Array<PropertyKey> = [],\n    public targetToProtect: Window | Object = typeof window !== 'undefined'\n      ? window\n      : globalThis,\n    private isInBrowser: Boolean = typeof window === 'undefined' ? false : true,\n  ) {\n    this.name = name;\n    this.isInBrowser = isInBrowser;\n    this.patchList.push(new PatchGlobalVal(targetToProtect, protectVariable));\n\n    // \u6267\u884C\u987A\u5E8F\u662F\uFF0C\u5168\u5C40\u73AF\u5883\u53D8\u91CF\u5148\u6FC0\u6D3B\uFF0C\u5168\u5C40\u73AF\u5883\u53D8\u91CF\u540E\u9500\u6BC1\n    if (this.isInBrowser) {\n      this.patchList = [\n        ...this.patchList,\n        new PatchStyle(),\n        new PatchEvent(),\n        new PatchHistory(),\n        new PatchInterval(),\n        new PatchWebpackJsonp(),\n      ];\n    }\n  }\n\n  //  1.\u89E6\u53D1\u751F\u547D\u5468\u671F\u94A9\u5B50\uFF0CwillActivate\uFF08\u5C06\u8981\u6FC0\u6D3B\uFF09\n  //  2.\u5C06\u5F53\u524D\u7EC4\u7684\u5176\u4ED6\u6C99\u76D2disable\uFF0C\u5E76\u89E6\u53D1switch\u751F\u547D\u5468\u671F\n  //  3.\u5C06\u5F53\u524Dwindow\u5BF9\u8C61\u5C5E\u6027\u8FDB\u884C\u7F13\u5B58\n  //  4.\u83B7\u53D6style\u8282\u70B9\uFF0C\u8FDB\u884C\u7F13\u5B58\n  //  5.\u6062\u590D\u6C99\u76D2\u8FD0\u884C\u671F\u95F4\u4EA7\u751F\u7684\u526F\u4F5C\u7528\n  public activate() {\n    if (this.isRunning) return;\n    this.patchList.forEach((patch) => {\n      patch.activate();\n    });\n    this.isRunning = true;\n  }\n\n  // 1.\u6062\u590D\u6C99\u76D2\u542F\u52A8\u671F\u95F4\u53D8\u91CF\u53D8\u66F4\u7684\u53D8\u91CF\uFF0C\u8BB0\u5F55\u53D8\u66F4\u8BB0\u5F55\n  // 2.\u6062\u590D\u6C99\u76D2\u542F\u52A8\u671F\u95F4\u5220\u9664\u7684\u53D8\u91CF\uFF0C\u8BB0\u5F55\u53D8\u66F4\u8BB0\u5F55\n  public deactivate(clearEffects: boolean = true) {\n    if (!this.isRunning) return; // \u6700\u540E\u9500\u6BC1\u5168\u5C40\u53D8\u91CF\u5B88\u62A4\n    [...this.patchList].reverse().forEach((patch) => {\n      patch.deactivate(clearEffects);\n    });\n    this.isRunning = false;\n  }\n}\n", "import { Sandbox } from './sandbox';\nimport { interfaces } from '@garfish/core';\nimport './globalExtensions';\n\nexport { Sandbox as default } from './sandbox';\n\nexport interface SandboxConfig {\n  snapshot?: boolean;\n  disableWith?: boolean;\n  strictIsolation?: boolean;\n}\n\ninterface BrowserConfig {\n  open?: boolean;\n  protectVariable?: PropertyKey[];\n}\n\nexport function GarfishBrowserSnapshot(op?: BrowserConfig) {\n  return function (Garfish: interfaces.Garfish): interfaces.Plugin {\n    const options = {\n      openBrowser: false,\n      version: '1.12.0',\n      name: 'browser-snapshot',\n\n      afterLoad(appInfo, appInstance) {\n        const config: BrowserConfig = op || { open: true };\n        const sandboxConfig = appInfo.sandbox || Garfish?.options?.sandbox;\n        if (\n          sandboxConfig === false ||\n          sandboxConfig.open === false ||\n          sandboxConfig?.snapshot === false\n        ) {\n          config.open = false;\n        }\n        if (sandboxConfig) {\n          config.protectVariable = [\n            ...(Garfish?.options.protectVariable || []),\n            ...(appInfo.protectVariable || []),\n          ];\n        }\n        options.openBrowser = !!config.open;\n        if (!config.open) return;\n        if (appInstance) {\n          // existing\n          if (appInstance.snapshotSandbox) return;\n          const sandbox = new Sandbox(appInfo.name, config.protectVariable);\n          appInstance.snapshotSandbox = sandbox;\n        }\n      },\n\n      beforeMount(appInfo, appInstance) {\n        // existing\n        if (!appInstance.snapshotSandbox) return;\n        appInstance.snapshotSandbox.activate();\n      },\n\n      afterUnmount(appInfo, appInstance) {\n        if (!appInstance.snapshotSandbox) return;\n        appInstance.snapshotSandbox.deactivate();\n      },\n    };\n    return options;\n  };\n}\n"],
  "mappings": "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",
  "names": []
}
